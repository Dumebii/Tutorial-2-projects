{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenSymbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "approveAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/ERC20Tokens.sol"
  },
  "ast": {
    "absolutePath": "contracts/ERC20Tokens.sol",
    "exportedSymbols": {
      "TokenERC20": [
        373
      ],
      "tokenRecipient": [
        11
      ]
    },
    "id": 374,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "tokenRecipient",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 11,
        "linearizedBaseContracts": [
          11
        ],
        "name": "tokenRecipient",
        "nameLocation": "68:14:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "3a624cd8",
            "id": 10,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "recieveApproval",
            "nameLocation": "98:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "122:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "114:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "114:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "137:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "129:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "129:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "_taken",
                  "nameLocation": "153:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "145:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "145:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "113:47:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "169:0:0"
            },
            "scope": 11,
            "src": "89:81:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 374,
        "src": "58:114:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "TokenERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 373,
        "linearizedBaseContracts": [
          373
        ],
        "name": "TokenERC20",
        "nameLocation": "183:10:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 13,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "214:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 373,
            "src": "200:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 12,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "200:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "95d89b41",
            "id": 15,
            "mutability": "mutable",
            "name": "symbol",
            "nameLocation": "238:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 373,
            "src": "224:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 14,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "224:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "313ce567",
            "id": 18,
            "mutability": "mutable",
            "name": "decimals",
            "nameLocation": "263:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 373,
            "src": "250:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 16,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "250:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "3138",
              "id": 17,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "274:2:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "18160ddd",
            "id": 20,
            "mutability": "mutable",
            "name": "totalSupply",
            "nameLocation": "297:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 373,
            "src": "282:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 19,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "282:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "70a08231",
            "id": 24,
            "mutability": "mutable",
            "name": "balanceOf",
            "nameLocation": "350:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 373,
            "src": "315:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 23,
              "keyType": {
                "id": 21,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "323:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "315:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 22,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "334:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dd62ed3e",
            "id": 30,
            "mutability": "mutable",
            "name": "allowance",
            "nameLocation": "420:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 373,
            "src": "365:64:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 29,
              "keyType": {
                "id": 25,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "373:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "365:47:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 28,
                "keyType": {
                  "id": 26,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "392:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "384:27:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 27,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "403:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 38,
            "name": "Transfer",
            "nameLocation": "442:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "467:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "451:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "451:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "489:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "473:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "473:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "501:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "493:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "493:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "450:57:0"
            },
            "src": "436:72:0"
          },
          {
            "anonymous": false,
            "id": 46,
            "name": "Approval",
            "nameLocation": "519:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "544:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 46,
                  "src": "528:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "528:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nameLocation": "568:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 46,
                  "src": "552:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "552:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "583:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 46,
                  "src": "578:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "578:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "527:63:0"
            },
            "src": "513:78:0"
          },
          {
            "anonymous": false,
            "id": 52,
            "name": "Burn",
            "nameLocation": "603:4:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "624:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "608:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "608:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "638:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "630:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "630:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "607:37:0"
            },
            "src": "597:48:0"
          },
          {
            "body": {
              "id": 87,
              "nodeType": "Block",
              "src": "772:181:0",
              "statements": [
                {
                  "expression": {
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "786:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 69,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 62,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "800:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "814:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 66,
                              "name": "decimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "826:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 65,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "818:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 64,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "818:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 67,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "818:17:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "814:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "800:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "786:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "786:49:0"
                },
                {
                  "expression": {
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 72,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "849:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 75,
                      "indexExpression": {
                        "expression": {
                          "id": 73,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "859:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "859:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "849:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 76,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "871:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "849:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "849:33:0"
                },
                {
                  "expression": {
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 79,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "896:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 80,
                      "name": "tokenName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "901:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "896:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "896:14:0"
                },
                {
                  "expression": {
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 83,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "924:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 84,
                      "name": "tokenSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "931:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "924:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "924:18:0"
                }
              ]
            },
            "id": 88,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nameLocation": "671:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "663:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "663:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nameLocation": "709:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "695:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "695:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nameLocation": "743:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "729:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "729:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "662:102:0"
            },
            "returnParameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "772:0:0"
            },
            "scope": 373,
            "src": "651:302:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 154,
              "nodeType": "Block",
              "src": "1032:354:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 98,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "1051:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1064:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1056:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 99,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1056:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1056:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1051:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 97,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1043:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1043:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "1043:26:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 107,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "1088:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 109,
                          "indexExpression": {
                            "id": 108,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 90,
                            "src": "1098:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1088:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 110,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 94,
                          "src": "1106:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1088:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 106,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1080:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1080:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "1080:33:0"
                },
                {
                  "assignments": [
                    115
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 115,
                      "mutability": "mutable",
                      "name": "previousBalances",
                      "nameLocation": "1139:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 154,
                      "src": "1134:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 114,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1134:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 123,
                  "initialValue": {
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 116,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "1158:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 118,
                      "indexExpression": {
                        "id": 117,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "1168:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1158:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 119,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "1178:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 121,
                      "indexExpression": {
                        "id": 120,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "1188:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1178:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1158:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1134:58:0"
                },
                {
                  "expression": {
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 124,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "1203:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 126,
                      "indexExpression": {
                        "id": 125,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "1213:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1203:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 127,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "1221:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1203:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "1203:24:0"
                },
                {
                  "expression": {
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 130,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "1238:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 132,
                      "indexExpression": {
                        "id": 131,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "1248:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1238:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 133,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "1256:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1238:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "1238:24:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 137,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "1287:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 138,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "1294:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 139,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "1299:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 136,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "1278:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1278:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 141,
                  "nodeType": "EmitStatement",
                  "src": "1273:33:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 143,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "1324:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 145,
                            "indexExpression": {
                              "id": 144,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 90,
                              "src": "1334:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1324:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 146,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "1343:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 148,
                            "indexExpression": {
                              "id": 147,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92,
                              "src": "1353:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1343:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1324:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 150,
                          "name": "previousBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "1361:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1324:53:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 142,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1317:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1317:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "1317:61:0"
                }
              ]
            },
            "id": 155,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "969:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "987:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "979:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "979:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1002:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "994:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "994:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "1015:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "1007:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1007:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "978:44:0"
            },
            "returnParameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1032:0:0"
            },
            "scope": 373,
            "src": "960:426:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 173,
              "nodeType": "Block",
              "src": "1467:72:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 165,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1487:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1487:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 167,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "1499:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 168,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 159,
                        "src": "1504:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 164,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 155,
                      "src": "1477:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1477:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "1477:34:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1528:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 163,
                  "id": 172,
                  "nodeType": "Return",
                  "src": "1521:11:0"
                }
              ]
            },
            "functionSelector": "a9059cbb",
            "id": 174,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "1400:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 157,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1417:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "1409:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1409:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 159,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "1430:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "1422:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1422:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1408:29:0"
            },
            "returnParameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 162,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "1458:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "1453:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1453:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1452:14:0"
            },
            "scope": 373,
            "src": "1391:148:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 213,
              "nodeType": "Block",
              "src": "1639:172:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 186,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 180,
                          "src": "1657:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 187,
                              "name": "allowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "1667:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 189,
                            "indexExpression": {
                              "id": 188,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 176,
                              "src": "1677:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1667:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 192,
                          "indexExpression": {
                            "expression": {
                              "id": 190,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1684:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1684:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1667:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1657:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 185,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1649:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1649:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 195,
                  "nodeType": "ExpressionStatement",
                  "src": "1649:47:0"
                },
                {
                  "expression": {
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 196,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "1706:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 200,
                        "indexExpression": {
                          "id": 197,
                          "name": "_from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 176,
                          "src": "1716:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1706:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 201,
                      "indexExpression": {
                        "expression": {
                          "id": 198,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1723:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1723:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1706:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 202,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 180,
                      "src": "1738:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1706:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "1706:38:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 206,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 176,
                        "src": "1764:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 207,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 178,
                        "src": "1771:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 208,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "1776:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 205,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 155,
                      "src": "1754:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1754:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 210,
                  "nodeType": "ExpressionStatement",
                  "src": "1754:29:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1800:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 184,
                  "id": 212,
                  "nodeType": "Return",
                  "src": "1793:11:0"
                }
              ]
            },
            "functionSelector": "23b872dd",
            "id": 214,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "1553:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 176,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "1574:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "1566:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1566:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 178,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1589:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "1581:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1581:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "1602:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "1594:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1594:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1565:44:0"
            },
            "returnParameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "1630:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "1625:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1625:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1624:14:0"
            },
            "scope": 373,
            "src": "1544:267:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 241,
              "nodeType": "Block",
              "src": "1897:131:0",
              "statements": [
                {
                  "expression": {
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 223,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "1907:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 227,
                        "indexExpression": {
                          "expression": {
                            "id": 224,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1917:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1917:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1907:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 228,
                      "indexExpression": {
                        "id": 226,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 216,
                        "src": "1929:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1907:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 229,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 218,
                      "src": "1941:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1907:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 231,
                  "nodeType": "ExpressionStatement",
                  "src": "1907:40:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 233,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1971:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1971:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 235,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 216,
                        "src": "1983:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 236,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 218,
                        "src": "1993:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 232,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "1962:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1962:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 238,
                  "nodeType": "EmitStatement",
                  "src": "1957:43:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2017:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 222,
                  "id": 240,
                  "nodeType": "Return",
                  "src": "2010:11:0"
                }
              ]
            },
            "functionSelector": "095ea7b3",
            "id": 242,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "1826:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 216,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nameLocation": "1842:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 242,
                  "src": "1834:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 215,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1834:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 218,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "1860:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 242,
                  "src": "1852:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 217,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1852:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1833:34:0"
            },
            "returnParameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 221,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "1888:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 242,
                  "src": "1883:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1883:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1882:14:0"
            },
            "scope": 373,
            "src": "1817:211:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 280,
              "nodeType": "Block",
              "src": "2150:217:0",
              "statements": [
                {
                  "assignments": [
                    255
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 255,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "2175:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 280,
                      "src": "2160:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_tokenRecipient_$11",
                        "typeString": "contract tokenRecipient"
                      },
                      "typeName": {
                        "id": 254,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 253,
                          "name": "tokenRecipient",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11,
                          "src": "2160:14:0"
                        },
                        "referencedDeclaration": 11,
                        "src": "2160:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_tokenRecipient_$11",
                          "typeString": "contract tokenRecipient"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 259,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 257,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 244,
                        "src": "2200:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 256,
                      "name": "tokenRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "2185:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_tokenRecipient_$11_$",
                        "typeString": "type(contract tokenRecipient)"
                      }
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2185:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_tokenRecipient_$11",
                      "typeString": "contract tokenRecipient"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2160:49:0"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 261,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 244,
                        "src": "2230:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 262,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 246,
                        "src": "2240:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 260,
                      "name": "approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 242,
                      "src": "2222:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2222:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 279,
                  "nodeType": "IfStatement",
                  "src": "2219:142:0",
                  "trueBody": {
                    "id": 278,
                    "nodeType": "Block",
                    "src": "2249:112:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 267,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2287:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2287:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 269,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 246,
                              "src": "2299:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 272,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2315:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenERC20_$373",
                                    "typeString": "contract TokenERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenERC20_$373",
                                    "typeString": "contract TokenERC20"
                                  }
                                ],
                                "id": 271,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2307:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 270,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2307:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 273,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2307:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 264,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 255,
                              "src": "2263:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_tokenRecipient_$11",
                                "typeString": "contract tokenRecipient"
                              }
                            },
                            "id": 266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "recieveApproval",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10,
                            "src": "2263:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (address,uint256,address) external"
                            }
                          },
                          "id": 274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2263:58:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 275,
                        "nodeType": "ExpressionStatement",
                        "src": "2263:58:0"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2342:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 252,
                        "id": 277,
                        "nodeType": "Return",
                        "src": "2335:11:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "cae9ca51",
            "id": 281,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveAndCall",
            "nameLocation": "2042:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 244,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nameLocation": "2065:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 281,
                  "src": "2057:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2057:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 246,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "2083:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 281,
                  "src": "2075:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2075:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 248,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "2104:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 281,
                  "src": "2091:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 247,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2091:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2056:59:0"
            },
            "returnParameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 251,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "2141:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 281,
                  "src": "2136:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 250,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2136:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2135:14:0"
            },
            "scope": 373,
            "src": "2033:334:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 316,
              "nodeType": "Block",
              "src": "2432:205:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 289,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "2451:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 292,
                          "indexExpression": {
                            "expression": {
                              "id": 290,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2461:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2461:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2451:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 293,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 283,
                          "src": "2475:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2451:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 288,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2443:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2443:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "2443:39:0"
                },
                {
                  "expression": {
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 297,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "2496:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 300,
                      "indexExpression": {
                        "expression": {
                          "id": 298,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2506:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2506:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2496:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 301,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 283,
                      "src": "2521:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2496:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 303,
                  "nodeType": "ExpressionStatement",
                  "src": "2496:31:0"
                },
                {
                  "expression": {
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 304,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "2541:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 305,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 283,
                      "src": "2556:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2541:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 307,
                  "nodeType": "ExpressionStatement",
                  "src": "2541:21:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 309,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2586:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2586:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 311,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 283,
                        "src": "2598:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 308,
                      "name": "Burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "2581:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2581:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 313,
                  "nodeType": "EmitStatement",
                  "src": "2576:29:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2626:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 287,
                  "id": 315,
                  "nodeType": "Return",
                  "src": "2619:11:0"
                }
              ]
            },
            "functionSelector": "42966c68",
            "id": 317,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "2381:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 283,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "2394:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "2386:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 282,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2386:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2385:16:0"
            },
            "returnParameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 286,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "2423:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "2418:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2418:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2417:14:0"
            },
            "scope": 373,
            "src": "2372:265:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 371,
              "nodeType": "Block",
              "src": "2721:279:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 327,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "2739:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 329,
                          "indexExpression": {
                            "id": 328,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 319,
                            "src": "2749:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2739:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 330,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 321,
                          "src": "2759:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2739:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 326,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2731:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2731:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 333,
                  "nodeType": "ExpressionStatement",
                  "src": "2731:35:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 335,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 321,
                          "src": "2784:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 336,
                              "name": "allowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "2793:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 338,
                            "indexExpression": {
                              "id": 337,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 319,
                              "src": "2803:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2793:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 341,
                          "indexExpression": {
                            "expression": {
                              "id": 339,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2810:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2810:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2793:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2784:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 334,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2776:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2776:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 344,
                  "nodeType": "ExpressionStatement",
                  "src": "2776:46:0"
                },
                {
                  "expression": {
                    "id": 349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 345,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "2832:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 347,
                      "indexExpression": {
                        "id": 346,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 319,
                        "src": "2842:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2832:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 348,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 321,
                      "src": "2852:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2832:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 350,
                  "nodeType": "ExpressionStatement",
                  "src": "2832:26:0"
                },
                {
                  "expression": {
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 351,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "2868:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 355,
                        "indexExpression": {
                          "id": 352,
                          "name": "_from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 319,
                          "src": "2878:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2868:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 356,
                      "indexExpression": {
                        "expression": {
                          "id": 353,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2885:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2885:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2868:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 357,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 321,
                      "src": "2900:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2868:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 359,
                  "nodeType": "ExpressionStatement",
                  "src": "2868:38:0"
                },
                {
                  "expression": {
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 360,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "2916:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 361,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 321,
                      "src": "2931:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2916:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 363,
                  "nodeType": "ExpressionStatement",
                  "src": "2916:21:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 365,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 319,
                        "src": "2957:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 366,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 321,
                        "src": "2964:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 364,
                      "name": "Burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "2952:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2952:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 368,
                  "nodeType": "EmitStatement",
                  "src": "2947:24:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2988:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 325,
                  "id": 370,
                  "nodeType": "Return",
                  "src": "2981:11:0"
                }
              ]
            },
            "functionSelector": "79cc6790",
            "id": 372,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nameLocation": "2652:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 319,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "2669:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 372,
                  "src": "2661:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 318,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2661:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 321,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "2684:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 372,
                  "src": "2676:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 320,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2676:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2660:31:0"
            },
            "returnParameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 324,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "2712:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 372,
                  "src": "2707:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 323,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2707:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2706:14:0"
            },
            "scope": 373,
            "src": "2643:357:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 374,
        "src": "174:2829:0",
        "usedErrors": []
      }
    ],
    "src": "33:2970:0"
  },
  "bytecode": "60806040526002805460ff191660121790553480156200001e57600080fd5b5060405162000e2c38038062000e2c83398101604081905262000041916200021d565b600254620000549060ff16600a620003a6565b620000609084620003bb565b600381905533600090815260046020908152604082209290925583516200008a92850190620000aa565b508051620000a0906001906020840190620000aa565b505050506200041a565b828054620000b890620003dd565b90600052602060002090601f016020900481019282620000dc576000855562000127565b82601f10620000f757805160ff191683800117855562000127565b8280016001018555821562000127579182015b82811115620001275782518255916020019190600101906200010a565b506200013592915062000139565b5090565b5b808211156200013557600081556001016200013a565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200017857600080fd5b81516001600160401b038082111562000195576200019562000150565b604051601f8301601f19908116603f01168101908282118183101715620001c057620001c062000150565b81604052838152602092508683858801011115620001dd57600080fd5b600091505b83821015620002015785820183015181830184015290820190620001e2565b83821115620002135760008385830101525b9695505050505050565b6000806000606084860312156200023357600080fd5b835160208501519093506001600160401b03808211156200025357600080fd5b620002618783880162000166565b935060408601519150808211156200027857600080fd5b50620002878682870162000166565b9150509250925092565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620002e8578160001904821115620002cc57620002cc62000291565b80851615620002da57918102915b93841c9390800290620002ac565b509250929050565b6000826200030157506001620003a0565b816200031057506000620003a0565b8160018114620003295760028114620003345762000354565b6001915050620003a0565b60ff84111562000348576200034862000291565b50506001821b620003a0565b5060208310610133831016604e8410600b841016171562000379575081810a620003a0565b620003858383620002a7565b80600019048211156200039c576200039c62000291565b0290505b92915050565b6000620003b48383620002f0565b9392505050565b6000816000190483118215151615620003d857620003d862000291565b500290565b600181811c90821680620003f257607f821691505b602082108114156200041457634e487b7160e01b600052602260045260246000fd5b50919050565b610a02806200042a6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a082311461015657806379cc67901461017657806395d89b4114610189578063a9059cbb14610191578063cae9ca51146101a4578063dd62ed3e146101b757600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd14610111578063313ce5671461012457806342966c6814610143575b600080fd5b6100c16101e2565b6040516100ce9190610717565b60405180910390f35b6100ea6100e5366004610788565b610270565b60405190151581526020016100ce565b61010360035481565b6040519081526020016100ce565b6100ea61011f3660046107b2565b6102dc565b6002546101319060ff1681565b60405160ff90911681526020016100ce565b6100ea6101513660046107ee565b61035b565b610103610164366004610807565b60046020526000908152604090205481565b6100ea610184366004610788565b6103f1565b6100c161050b565b6100ea61019f366004610788565b610518565b6100ea6101b2366004610838565b61052e565b6101036101c5366004610903565b600560209081526000928352604080842090915290825290205481565b600080546101ef90610936565b80601f016020809104026020016040519081016040528092919081815260200182805461021b90610936565b80156102685780601f1061023d57610100808354040283529160200191610268565b820191906000526020600020905b81548152906001019060200180831161024b57829003601f168201915b505050505081565b3360008181526005602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102cb9086815260200190565b60405180910390a350600192915050565b6001600160a01b038316600090815260056020908152604080832033845290915281205482111561030c57600080fd5b6001600160a01b03841660009081526005602090815260408083203384529091528120805484929061033f908490610987565b9091555061035090508484846105b8565b5060015b9392505050565b3360009081526004602052604081205482111561037757600080fd5b3360009081526004602052604081208054849290610396908490610987565b9250508190555081600360008282546103af9190610987565b909155505060405182815233907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59060200160405180910390a2506001919050565b6001600160a01b03821660009081526004602052604081205482111561041657600080fd5b6001600160a01b038316600090815260056020908152604080832033845290915290205482111561044657600080fd5b6001600160a01b0383166000908152600460205260408120805484929061046e908490610987565b90915550506001600160a01b0383166000908152600560209081526040808320338452909152812080548492906104a6908490610987565b9250508190555081600360008282546104bf9190610987565b90915550506040518281526001600160a01b038416907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59060200160405180910390a250600192915050565b600180546101ef90610936565b60006105253384846105b8565b50600192915050565b60008361053b8185610270565b156105b05760405163074c499b60e31b8152336004820152602481018590523060448201526001600160a01b03821690633a624cd890606401600060405180830381600087803b15801561058e57600080fd5b505af11580156105a2573d6000803e3d6000fd5b505050506001915050610354565b509392505050565b6001600160a01b0382166105cb57600080fd5b6001600160a01b0383166000908152600460205260409020548111156105f057600080fd5b6001600160a01b0380831660009081526004602052604080822054928616825281208054919291839061062490849061099e565b91829055506001600160a01b0386166000908152600460205260408120805492945085935091610655908490610987565b90915550506001600160a01b0384166000908152600460205260408120805484929061068290849061099e565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106ce91815260200190565b60405180910390a36001600160a01b0380841660009081526004602052604080822054928716825290205482916107049161099e565b14610711576107116109b6565b50505050565b600060208083528351808285015260005b8181101561074457858101830151858201604001528201610728565b81811115610756576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461078357600080fd5b919050565b6000806040838503121561079b57600080fd5b6107a48361076c565b946020939093013593505050565b6000806000606084860312156107c757600080fd5b6107d08461076c565b92506107de6020850161076c565b9150604084013590509250925092565b60006020828403121561080057600080fd5b5035919050565b60006020828403121561081957600080fd5b6103548261076c565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561084d57600080fd5b6108568461076c565b925060208401359150604084013567ffffffffffffffff8082111561087a57600080fd5b818601915086601f83011261088e57600080fd5b8135818111156108a0576108a0610822565b604051601f8201601f19908116603f011681019083821181831017156108c8576108c8610822565b816040528281528960208487010111156108e157600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6000806040838503121561091657600080fd5b61091f8361076c565b915061092d6020840161076c565b90509250929050565b600181811c9082168061094a57607f821691505b6020821081141561096b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561099957610999610971565b500390565b600082198211156109b1576109b1610971565b500190565b634e487b7160e01b600052600160045260246000fdfea2646970667358221220d8b6e5533ce2d2a39ca12599946285c29ea96db1f22df740a23ec154fe12c6cc64736f6c634300080b0033",
  "bytecodeSha1": "37f4753c29a4ec3fd6b60b54d2e924955ad170fd",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "TokenERC20",
  "coverageMap": {
    "branches": {
      "0": {
        "TokenERC20._transfer": {
          "34": [
            1051,
            1068,
            true
          ],
          "35": [
            1088,
            1112,
            true
          ]
        },
        "TokenERC20.approveAndCall": {
          "33": [
            2222,
            2247,
            false
          ]
        },
        "TokenERC20.burn": {
          "30": [
            2451,
            2481,
            true
          ]
        },
        "TokenERC20.burnFrom": {
          "31": [
            2739,
            2765,
            true
          ],
          "32": [
            2784,
            2821,
            true
          ]
        },
        "TokenERC20.transferFrom": {
          "29": [
            1657,
            1695,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "TokenERC20._transfer": {
          "23": [
            1043,
            1069
          ],
          "24": [
            1080,
            1113
          ],
          "25": [
            1203,
            1227
          ],
          "26": [
            1238,
            1262
          ],
          "27": [
            1273,
            1306
          ],
          "28": [
            1317,
            1378
          ]
        },
        "TokenERC20.approve": {
          "0": [
            1907,
            1947
          ],
          "1": [
            1957,
            2000
          ],
          "2": [
            2010,
            2021
          ]
        },
        "TokenERC20.approveAndCall": {
          "21": [
            2263,
            2321
          ],
          "22": [
            2335,
            2346
          ]
        },
        "TokenERC20.burn": {
          "7": [
            2443,
            2482
          ],
          "8": [
            2496,
            2527
          ],
          "9": [
            2541,
            2562
          ],
          "10": [
            2576,
            2605
          ],
          "11": [
            2619,
            2630
          ]
        },
        "TokenERC20.burnFrom": {
          "12": [
            2731,
            2766
          ],
          "13": [
            2776,
            2822
          ],
          "14": [
            2832,
            2858
          ],
          "15": [
            2868,
            2906
          ],
          "16": [
            2916,
            2937
          ],
          "17": [
            2947,
            2971
          ],
          "18": [
            2981,
            2992
          ]
        },
        "TokenERC20.transfer": {
          "19": [
            1477,
            1511
          ],
          "20": [
            1521,
            1532
          ]
        },
        "TokenERC20.transferFrom": {
          "3": [
            1649,
            1696
          ],
          "4": [
            1706,
            1744
          ],
          "5": [
            1754,
            1783
          ],
          "6": [
            1793,
            1804
          ]
        }
      }
    }
  },
  "dependencies": [
    "tokenRecipient"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a082311461015657806379cc67901461017657806395d89b4114610189578063a9059cbb14610191578063cae9ca51146101a4578063dd62ed3e146101b757600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd14610111578063313ce5671461012457806342966c6814610143575b600080fd5b6100c16101e2565b6040516100ce9190610717565b60405180910390f35b6100ea6100e5366004610788565b610270565b60405190151581526020016100ce565b61010360035481565b6040519081526020016100ce565b6100ea61011f3660046107b2565b6102dc565b6002546101319060ff1681565b60405160ff90911681526020016100ce565b6100ea6101513660046107ee565b61035b565b610103610164366004610807565b60046020526000908152604090205481565b6100ea610184366004610788565b6103f1565b6100c161050b565b6100ea61019f366004610788565b610518565b6100ea6101b2366004610838565b61052e565b6101036101c5366004610903565b600560209081526000928352604080842090915290825290205481565b600080546101ef90610936565b80601f016020809104026020016040519081016040528092919081815260200182805461021b90610936565b80156102685780601f1061023d57610100808354040283529160200191610268565b820191906000526020600020905b81548152906001019060200180831161024b57829003601f168201915b505050505081565b3360008181526005602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102cb9086815260200190565b60405180910390a350600192915050565b6001600160a01b038316600090815260056020908152604080832033845290915281205482111561030c57600080fd5b6001600160a01b03841660009081526005602090815260408083203384529091528120805484929061033f908490610987565b9091555061035090508484846105b8565b5060015b9392505050565b3360009081526004602052604081205482111561037757600080fd5b3360009081526004602052604081208054849290610396908490610987565b9250508190555081600360008282546103af9190610987565b909155505060405182815233907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59060200160405180910390a2506001919050565b6001600160a01b03821660009081526004602052604081205482111561041657600080fd5b6001600160a01b038316600090815260056020908152604080832033845290915290205482111561044657600080fd5b6001600160a01b0383166000908152600460205260408120805484929061046e908490610987565b90915550506001600160a01b0383166000908152600560209081526040808320338452909152812080548492906104a6908490610987565b9250508190555081600360008282546104bf9190610987565b90915550506040518281526001600160a01b038416907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59060200160405180910390a250600192915050565b600180546101ef90610936565b60006105253384846105b8565b50600192915050565b60008361053b8185610270565b156105b05760405163074c499b60e31b8152336004820152602481018590523060448201526001600160a01b03821690633a624cd890606401600060405180830381600087803b15801561058e57600080fd5b505af11580156105a2573d6000803e3d6000fd5b505050506001915050610354565b509392505050565b6001600160a01b0382166105cb57600080fd5b6001600160a01b0383166000908152600460205260409020548111156105f057600080fd5b6001600160a01b0380831660009081526004602052604080822054928616825281208054919291839061062490849061099e565b91829055506001600160a01b0386166000908152600460205260408120805492945085935091610655908490610987565b90915550506001600160a01b0384166000908152600460205260408120805484929061068290849061099e565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106ce91815260200190565b60405180910390a36001600160a01b0380841660009081526004602052604080822054928716825290205482916107049161099e565b14610711576107116109b6565b50505050565b600060208083528351808285015260005b8181101561074457858101830151858201604001528201610728565b81811115610756576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461078357600080fd5b919050565b6000806040838503121561079b57600080fd5b6107a48361076c565b946020939093013593505050565b6000806000606084860312156107c757600080fd5b6107d08461076c565b92506107de6020850161076c565b9150604084013590509250925092565b60006020828403121561080057600080fd5b5035919050565b60006020828403121561081957600080fd5b6103548261076c565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561084d57600080fd5b6108568461076c565b925060208401359150604084013567ffffffffffffffff8082111561087a57600080fd5b818601915086601f83011261088e57600080fd5b8135818111156108a0576108a0610822565b604051601f8201601f19908116603f011681019083821181831017156108c8576108c8610822565b816040528281528960208487010111156108e157600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6000806040838503121561091657600080fd5b61091f8361076c565b915061092d6020840161076c565b90509250929050565b600181811c9082168061094a57607f821691505b6020821081141561096b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561099957610999610971565b500390565b600082198211156109b1576109b1610971565b500190565b634e487b7160e01b600052600160045260246000fdfea2646970667358221220d8b6e5533ce2d2a39ca12599946285c29ea96db1f22df740a23ec154fe12c6cc64736f6c634300080b0033",
  "deployedSourceMap": "174:2829:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;200:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1817:211;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:1;;1211:22;1193:41;;1181:2;1166:18;1817:211:0;1053:187:1;282:26:0;;;;;;;;;1391:25:1;;;1379:2;1364:18;282:26:0;1245:177:1;1544:267:0;;;;;;:::i;:::-;;:::i;250:26::-;;;;;;;;;;;;1932:4:1;1920:17;;;1902:36;;1890:2;1875:18;250:26:0;1760:184:1;2372:265:0;;;;;;:::i;:::-;;:::i;315:44::-;;;;;;:::i;:::-;;;;;;;;;;;;;;2643:357;;;;;;:::i;:::-;;:::i;224:20::-;;;:::i;1391:148::-;;;;;;:::i;:::-;;:::i;2033:334::-;;;;;;:::i;:::-;;:::i;365:64::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;200:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1817:211::-;1917:10;1883:12;1907:21;;;:9;:21;;;;;;;;-1:-1:-1;;;;;1907:31:0;;;;;;;;;;:40;;;1962:38;1883:12;;1907:31;;1962:38;;;;1941:6;1391:25:1;;1379:2;1364:18;;1245:177;1962:38:0;;;;;;;;-1:-1:-1;2017:4:0;1817:211;;;;:::o;1544:267::-;-1:-1:-1;;;;;1667:16:0;;1625:12;1667:16;;;:9;:16;;;;;;;;1684:10;1667:28;;;;;;;;1657:38;;;1649:47;;;;;;-1:-1:-1;;;;;1706:16:0;;;;;;:9;:16;;;;;;;;1723:10;1706:28;;;;;;;:38;;1738:6;;1706:16;:38;;1738:6;;1706:38;:::i;:::-;;;;-1:-1:-1;1754:29:0;;-1:-1:-1;1764:5:0;1771:3;1776:6;1754:9;:29::i;:::-;-1:-1:-1;1800:4:0;1544:267;;;;;;:::o;2372:265::-;2461:10;2418:12;2451:21;;;:9;:21;;;;;;:30;-1:-1:-1;2451:30:0;2443:39;;;;;;2506:10;2496:21;;;;:9;:21;;;;;:31;;2521:6;;2496:21;:31;;2521:6;;2496:31;:::i;:::-;;;;;;;;2556:6;2541:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;2581:24:0;;1391:25:1;;;2586:10:0;;2581:24;;1379:2:1;1364:18;2581:24:0;;;;;;;-1:-1:-1;2626:4:0;;2372:265;-1:-1:-1;2372:265:0:o;2643:357::-;-1:-1:-1;;;;;2739:16:0;;2707:12;2739:16;;;:9;:16;;;;;;:26;-1:-1:-1;2739:26:0;2731:35;;;;;;-1:-1:-1;;;;;2793:16:0;;;;;;:9;:16;;;;;;;;2810:10;2793:28;;;;;;;;2784:37;;;2776:46;;;;;;-1:-1:-1;;;;;2832:16:0;;;;;;:9;:16;;;;;:26;;2852:6;;2832:16;:26;;2852:6;;2832:26;:::i;:::-;;;;-1:-1:-1;;;;;;;2868:16:0;;;;;;:9;:16;;;;;;;;2885:10;2868:28;;;;;;;:38;;2900:6;;2868:16;:38;;2900:6;;2868:38;:::i;:::-;;;;;;;;2931:6;2916:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;2952:19:0;;1391:25:1;;;-1:-1:-1;;;;;2952:19:0;;;;;1379:2:1;1364:18;2952:19:0;;;;;;;-1:-1:-1;2988:4:0;2643:357;;;;:::o;224:20::-;;;;;;;:::i;1391:148::-;1453:12;1477:34;1487:10;1499:3;1504:6;1477:9;:34::i;:::-;-1:-1:-1;1528:4:0;1391:148;;;;:::o;2033:334::-;2136:12;2200:8;2222:25;2200:8;2240:6;2222:7;:25::i;:::-;2219:142;;;2263:58;;-1:-1:-1;;;2263:58:0;;2287:10;2263:58;;;4677:34:1;4727:18;;;4720:34;;;2315:4:0;4770:18:1;;;4763:43;-1:-1:-1;;;;;2263:23:0;;;;;4612:18:1;;2263:58:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2342:4;2335:11;;;;;2219:142;2150:217;2033:334;;;;;:::o;960:426::-;-1:-1:-1;;;;;1051:17:0;;1043:26;;;;;;-1:-1:-1;;;;;1088:16:0;;;;;;:9;:16;;;;;;:24;-1:-1:-1;1088:24:0;1080:33;;;;;;-1:-1:-1;;;;;1178:14:0;;;1134:21;1178:14;;;:9;:14;;;;;;;1158:16;;;;;;;:34;;1134:21;;1178:14;1134:21;;1158:34;;1178:14;;1158:34;:::i;:::-;;;;;-1:-1:-1;;;;;;1203:16:0;;;;;;:9;:16;;;;;:24;;1158:34;;-1:-1:-1;1221:6:0;;-1:-1:-1;1203:16:0;:24;;1221:6;;1203:24;:::i;:::-;;;;-1:-1:-1;;;;;;;1238:16:0;;;;;;:9;:16;;;;;:24;;1256:6;;1238:16;:24;;1256:6;;1238:24;:::i;:::-;;;;;;;;1294:3;-1:-1:-1;;;;;1278:28:0;1287:5;-1:-1:-1;;;;;1278:28:0;;1299:6;1278:28;;;;1391:25:1;;1379:2;1364:18;;1245:177;1278:28:0;;;;;;;;-1:-1:-1;;;;;1343:14:0;;;;;;;:9;:14;;;;;;;1324:16;;;;;;;;1361;;1324:33;;;:::i;:::-;:53;1317:61;;;;:::i;:::-;1032:354;960:426;;;:::o;14:597:1:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:1;574:15;-1:-1:-1;;570:29:1;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:1:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:1;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:1:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:180::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;-1:-1:-1;2100:23:1;;1949:180;-1:-1:-1;1949:180:1:o;2134:186::-;2193:6;2246:2;2234:9;2225:7;2221:23;2217:32;2214:52;;;2262:1;2259;2252:12;2214:52;2285:29;2304:9;2285:29;:::i;2325:127::-;2386:10;2381:3;2377:20;2374:1;2367:31;2417:4;2414:1;2407:15;2441:4;2438:1;2431:15;2457:1063;2543:6;2551;2559;2612:2;2600:9;2591:7;2587:23;2583:32;2580:52;;;2628:1;2625;2618:12;2580:52;2651:29;2670:9;2651:29;:::i;:::-;2641:39;;2727:2;2716:9;2712:18;2699:32;2689:42;;2782:2;2771:9;2767:18;2754:32;2805:18;2846:2;2838:6;2835:14;2832:34;;;2862:1;2859;2852:12;2832:34;2900:6;2889:9;2885:22;2875:32;;2945:7;2938:4;2934:2;2930:13;2926:27;2916:55;;2967:1;2964;2957:12;2916:55;3003:2;2990:16;3025:2;3021;3018:10;3015:36;;;3031:18;;:::i;:::-;3106:2;3100:9;3074:2;3160:13;;-1:-1:-1;;3156:22:1;;;3180:2;3152:31;3148:40;3136:53;;;3204:18;;;3224:22;;;3201:46;3198:72;;;3250:18;;:::i;:::-;3290:10;3286:2;3279:22;3325:2;3317:6;3310:18;3365:7;3360:2;3355;3351;3347:11;3343:20;3340:33;3337:53;;;3386:1;3383;3376:12;3337:53;3442:2;3437;3433;3429:11;3424:2;3416:6;3412:15;3399:46;3487:1;3482:2;3477;3469:6;3465:15;3461:24;3454:35;3508:6;3498:16;;;;;;;2457:1063;;;;;:::o;3525:260::-;3593:6;3601;3654:2;3642:9;3633:7;3629:23;3625:32;3622:52;;;3670:1;3667;3660:12;3622:52;3693:29;3712:9;3693:29;:::i;:::-;3683:39;;3741:38;3775:2;3764:9;3760:18;3741:38;:::i;:::-;3731:48;;3525:260;;;;;:::o;3790:380::-;3869:1;3865:12;;;;3912;;;3933:61;;3987:4;3979:6;3975:17;3965:27;;3933:61;4040:2;4032:6;4029:14;4009:18;4006:38;4003:161;;;4086:10;4081:3;4077:20;4074:1;4067:31;4121:4;4118:1;4111:15;4149:4;4146:1;4139:15;4003:161;;3790:380;;;:::o;4175:127::-;4236:10;4231:3;4227:20;4224:1;4217:31;4267:4;4264:1;4257:15;4291:4;4288:1;4281:15;4307:125;4347:4;4375:1;4372;4369:8;4366:34;;;4380:18;;:::i;:::-;-1:-1:-1;4417:9:1;;4307:125::o;4817:128::-;4857:3;4888:1;4884:6;4881:1;4878:13;4875:39;;;4894:18;;:::i;:::-;-1:-1:-1;4930:9:1;;4817:128::o;4950:127::-;5011:10;5006:3;5002:20;4999:1;4992:31;5042:4;5039:1;5032:15;5066:4;5063:1;5056:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    174,
    3003
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0xCAE9CA51 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x143 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x717 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH2 0xE5 CALLDATASIZE PUSH1 0x4 PUSH2 0x788 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0x103 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0xEA PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x131 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0xEA PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x7EE JUMP JUMPDEST PUSH2 0x35B JUMP JUMPDEST PUSH2 0x103 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x807 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xEA PUSH2 0x184 CALLDATASIZE PUSH1 0x4 PUSH2 0x788 JUMP JUMPDEST PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x50B JUMP JUMPDEST PUSH2 0xEA PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0x788 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH2 0xEA PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x838 JUMP JUMPDEST PUSH2 0x52E JUMP JUMPDEST PUSH2 0x103 PUSH2 0x1C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x903 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x1EF SWAP1 PUSH2 0x936 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x21B SWAP1 PUSH2 0x936 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x268 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x23D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x268 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x24B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x2CB SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x33F SWAP1 DUP5 SWAP1 PUSH2 0x987 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x350 SWAP1 POP DUP5 DUP5 DUP5 PUSH2 0x5B8 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x396 SWAP1 DUP5 SWAP1 PUSH2 0x987 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x987 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x46E SWAP1 DUP5 SWAP1 PUSH2 0x987 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x4A6 SWAP1 DUP5 SWAP1 PUSH2 0x987 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4BF SWAP2 SWAP1 PUSH2 0x987 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x1EF SWAP1 PUSH2 0x936 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x525 CALLER DUP5 DUP5 PUSH2 0x5B8 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x53B DUP2 DUP6 PUSH2 0x270 JUMP JUMPDEST ISZERO PUSH2 0x5B0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x74C499B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x3A624CD8 SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x58E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 SWAP2 POP POP PUSH2 0x354 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x5F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP3 DUP7 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP2 DUP4 SWAP1 PUSH2 0x624 SWAP1 DUP5 SWAP1 PUSH2 0x99E JUMP JUMPDEST SWAP2 DUP3 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP5 POP DUP6 SWAP4 POP SWAP2 PUSH2 0x655 SWAP1 DUP5 SWAP1 PUSH2 0x987 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x682 SWAP1 DUP5 SWAP1 PUSH2 0x99E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6CE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP3 DUP8 AND DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP3 SWAP2 PUSH2 0x704 SWAP2 PUSH2 0x99E JUMP JUMPDEST EQ PUSH2 0x711 JUMPI PUSH2 0x711 PUSH2 0x9B6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x744 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x728 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x756 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x783 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x79B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A4 DUP4 PUSH2 0x76C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D0 DUP5 PUSH2 0x76C JUMP JUMPDEST SWAP3 POP PUSH2 0x7DE PUSH1 0x20 DUP6 ADD PUSH2 0x76C JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x800 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x819 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x354 DUP3 PUSH2 0x76C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x84D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x856 DUP5 PUSH2 0x76C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x87A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x88E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x8A0 JUMPI PUSH2 0x8A0 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x8C8 JUMPI PUSH2 0x8C8 PUSH2 0x822 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x8E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x916 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x91F DUP4 PUSH2 0x76C JUMP JUMPDEST SWAP2 POP PUSH2 0x92D PUSH1 0x20 DUP5 ADD PUSH2 0x76C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x94A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x96B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x999 JUMPI PUSH2 0x999 PUSH2 0x971 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x9B1 JUMPI PUSH2 0x9B1 PUSH2 0x971 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 0xB6 0xE5 MSTORE8 EXTCODECOPY 0xE2 0xD2 LOG3 SWAP13 LOG1 0x25 SWAP10 SWAP5 PUSH3 0x85C29E 0xA9 PUSH14 0xB1F22DF740A23EC154FE12C6CC64 PUSH20 0x6F6C634300080B00330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        174,
        3003
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB4"
    },
    "25": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "38": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "49": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x156"
    },
    "53": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x79CC6790"
    },
    "60": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x176"
    },
    "64": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95D89B41"
    },
    "71": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x189"
    },
    "75": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "82": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x191"
    },
    "86": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xCAE9CA51"
    },
    "93": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A4"
    },
    "97": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "DUP1",
      "path": "0"
    },
    "99": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD62ED3E"
    },
    "104": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "EQ",
      "path": "0"
    },
    "105": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B7"
    },
    "108": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "109": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "DUP1",
      "path": "0"
    },
    "112": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "REVERT",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6FDDE03"
    },
    "120": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB9"
    },
    "124": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "131": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD7"
    },
    "135": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x18160DDD"
    },
    "142": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFA"
    },
    "146": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "DUP1",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "153": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "EQ",
      "path": "0"
    },
    "154": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x111"
    },
    "157": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "158": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "DUP1",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "164": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "EQ",
      "path": "0"
    },
    "165": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x124"
    },
    "168": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "169": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "DUP1",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x42966C68"
    },
    "175": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "EQ",
      "path": "0"
    },
    "176": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x143"
    },
    "179": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "180": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "183": {
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "DUP1",
      "path": "0"
    },
    "184": {
      "first_revert": true,
      "fn": null,
      "offset": [
        174,
        3003
      ],
      "op": "REVERT",
      "path": "0"
    },
    "185": {
      "offset": [
        200,
        218
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "186": {
      "fn": null,
      "offset": [
        200,
        218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "189": {
      "fn": null,
      "offset": [
        200,
        218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E2"
    },
    "192": {
      "fn": null,
      "jump": "i",
      "offset": [
        200,
        218
      ],
      "op": "JUMP",
      "path": "0"
    },
    "193": {
      "fn": null,
      "offset": [
        200,
        218
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "194": {
      "fn": null,
      "offset": [
        200,
        218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "196": {
      "fn": null,
      "offset": [
        200,
        218
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "197": {
      "fn": null,
      "offset": [
        200,
        218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE"
    },
    "200": {
      "fn": null,
      "offset": [
        200,
        218
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "201": {
      "fn": null,
      "offset": [
        200,
        218
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "202": {
      "fn": null,
      "offset": [
        200,
        218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x717"
    },
    "205": {
      "fn": null,
      "jump": "i",
      "offset": [
        200,
        218
      ],
      "op": "JUMP",
      "path": "0"
    },
    "206": {
      "fn": null,
      "offset": [
        200,
        218
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "207": {
      "fn": null,
      "offset": [
        200,
        218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "209": {
      "fn": null,
      "offset": [
        200,
        218
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "210": {
      "fn": null,
      "offset": [
        200,
        218
      ],
      "op": "DUP1",
      "path": "0"
    },
    "211": {
      "fn": null,
      "offset": [
        200,
        218
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "212": {
      "fn": null,
      "offset": [
        200,
        218
      ],
      "op": "SUB",
      "path": "0"
    },
    "213": {
      "fn": null,
      "offset": [
        200,
        218
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "214": {
      "fn": null,
      "offset": [
        200,
        218
      ],
      "op": "RETURN",
      "path": "0"
    },
    "215": {
      "fn": "TokenERC20.approve",
      "offset": [
        1817,
        2028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "216": {
      "fn": "TokenERC20.approve",
      "offset": [
        1817,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA"
    },
    "219": {
      "fn": "TokenERC20.approve",
      "offset": [
        1817,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE5"
    },
    "222": {
      "fn": "TokenERC20.approve",
      "offset": [
        1817,
        2028
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "223": {
      "fn": "TokenERC20.approve",
      "offset": [
        1817,
        2028
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "225": {
      "fn": "TokenERC20.approve",
      "offset": [
        1817,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x788"
    },
    "228": {
      "fn": "TokenERC20.approve",
      "jump": "i",
      "offset": [
        1817,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "229": {
      "fn": "TokenERC20.approve",
      "offset": [
        1817,
        2028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "230": {
      "fn": "TokenERC20.approve",
      "offset": [
        1817,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x270"
    },
    "233": {
      "fn": "TokenERC20.approve",
      "jump": "i",
      "offset": [
        1817,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "234": {
      "fn": "TokenERC20.approve",
      "offset": [
        1817,
        2028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "235": {
      "fn": "TokenERC20.approve",
      "offset": [
        1817,
        2028
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "237": {
      "fn": "TokenERC20.approve",
      "offset": [
        1817,
        2028
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "238": {
      "op": "SWAP1"
    },
    "239": {
      "op": "ISZERO"
    },
    "240": {
      "op": "ISZERO"
    },
    "241": {
      "op": "DUP2"
    },
    "242": {
      "op": "MSTORE"
    },
    "243": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "245": {
      "op": "ADD"
    },
    "246": {
      "fn": "TokenERC20.approve",
      "offset": [
        1817,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE"
    },
    "249": {
      "op": "JUMP"
    },
    "250": {
      "offset": [
        282,
        308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "251": {
      "fn": "TokenERC20.approve",
      "offset": [
        282,
        308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x103"
    },
    "254": {
      "fn": "TokenERC20.approve",
      "offset": [
        282,
        308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "256": {
      "fn": "TokenERC20.approve",
      "offset": [
        282,
        308
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "257": {
      "fn": "TokenERC20.approve",
      "offset": [
        282,
        308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "258": {
      "fn": "TokenERC20.approve",
      "offset": [
        282,
        308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "259": {
      "fn": "TokenERC20.approve",
      "offset": [
        282,
        308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "260": {
      "fn": "TokenERC20.approve",
      "offset": [
        282,
        308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "262": {
      "fn": "TokenERC20.approve",
      "offset": [
        282,
        308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "263": {
      "op": "SWAP1"
    },
    "264": {
      "op": "DUP2"
    },
    "265": {
      "op": "MSTORE"
    },
    "266": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "268": {
      "op": "ADD"
    },
    "269": {
      "offset": [
        282,
        308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE"
    },
    "272": {
      "op": "JUMP"
    },
    "273": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1544,
        1811
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "274": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1544,
        1811
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA"
    },
    "277": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1544,
        1811
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11F"
    },
    "280": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1544,
        1811
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "281": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1544,
        1811
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "283": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1544,
        1811
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B2"
    },
    "286": {
      "fn": "TokenERC20.transferFrom",
      "jump": "i",
      "offset": [
        1544,
        1811
      ],
      "op": "JUMP",
      "path": "0"
    },
    "287": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1544,
        1811
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "288": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1544,
        1811
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DC"
    },
    "291": {
      "fn": "TokenERC20.transferFrom",
      "jump": "i",
      "offset": [
        1544,
        1811
      ],
      "op": "JUMP",
      "path": "0"
    },
    "292": {
      "offset": [
        250,
        276
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "293": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        250,
        276
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "295": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        250,
        276
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "296": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        250,
        276
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x131"
    },
    "299": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        250,
        276
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "300": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        250,
        276
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "302": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        250,
        276
      ],
      "op": "AND",
      "path": "0"
    },
    "303": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        250,
        276
      ],
      "op": "DUP2",
      "path": "0"
    },
    "304": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        250,
        276
      ],
      "op": "JUMP",
      "path": "0"
    },
    "305": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        250,
        276
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "306": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        250,
        276
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "308": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        250,
        276
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "309": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "311": {
      "op": "SWAP1"
    },
    "312": {
      "op": "SWAP2"
    },
    "313": {
      "op": "AND"
    },
    "314": {
      "op": "DUP2"
    },
    "315": {
      "op": "MSTORE"
    },
    "316": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "318": {
      "op": "ADD"
    },
    "319": {
      "offset": [
        250,
        276
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE"
    },
    "322": {
      "op": "JUMP"
    },
    "323": {
      "fn": "TokenERC20.burn",
      "offset": [
        2372,
        2637
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "324": {
      "fn": "TokenERC20.burn",
      "offset": [
        2372,
        2637
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA"
    },
    "327": {
      "fn": "TokenERC20.burn",
      "offset": [
        2372,
        2637
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x151"
    },
    "330": {
      "fn": "TokenERC20.burn",
      "offset": [
        2372,
        2637
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "331": {
      "fn": "TokenERC20.burn",
      "offset": [
        2372,
        2637
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "333": {
      "fn": "TokenERC20.burn",
      "offset": [
        2372,
        2637
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7EE"
    },
    "336": {
      "fn": "TokenERC20.burn",
      "jump": "i",
      "offset": [
        2372,
        2637
      ],
      "op": "JUMP",
      "path": "0"
    },
    "337": {
      "fn": "TokenERC20.burn",
      "offset": [
        2372,
        2637
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "338": {
      "fn": "TokenERC20.burn",
      "offset": [
        2372,
        2637
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x35B"
    },
    "341": {
      "fn": "TokenERC20.burn",
      "jump": "i",
      "offset": [
        2372,
        2637
      ],
      "op": "JUMP",
      "path": "0"
    },
    "342": {
      "offset": [
        315,
        359
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "343": {
      "fn": "TokenERC20.burn",
      "offset": [
        315,
        359
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x103"
    },
    "346": {
      "fn": "TokenERC20.burn",
      "offset": [
        315,
        359
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x164"
    },
    "349": {
      "fn": "TokenERC20.burn",
      "offset": [
        315,
        359
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "350": {
      "fn": "TokenERC20.burn",
      "offset": [
        315,
        359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "352": {
      "fn": "TokenERC20.burn",
      "offset": [
        315,
        359
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x807"
    },
    "355": {
      "fn": "TokenERC20.burn",
      "jump": "i",
      "offset": [
        315,
        359
      ],
      "op": "JUMP",
      "path": "0"
    },
    "356": {
      "fn": "TokenERC20.burn",
      "offset": [
        315,
        359
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "357": {
      "fn": "TokenERC20.burn",
      "offset": [
        315,
        359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "359": {
      "fn": "TokenERC20.burn",
      "offset": [
        315,
        359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "361": {
      "fn": "TokenERC20.burn",
      "offset": [
        315,
        359
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "362": {
      "fn": "TokenERC20.burn",
      "offset": [
        315,
        359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "364": {
      "fn": "TokenERC20.burn",
      "offset": [
        315,
        359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "365": {
      "fn": "TokenERC20.burn",
      "offset": [
        315,
        359
      ],
      "op": "DUP2",
      "path": "0"
    },
    "366": {
      "fn": "TokenERC20.burn",
      "offset": [
        315,
        359
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "367": {
      "fn": "TokenERC20.burn",
      "offset": [
        315,
        359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "369": {
      "fn": "TokenERC20.burn",
      "offset": [
        315,
        359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "370": {
      "fn": "TokenERC20.burn",
      "offset": [
        315,
        359
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "371": {
      "fn": "TokenERC20.burn",
      "offset": [
        315,
        359
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "372": {
      "fn": "TokenERC20.burn",
      "offset": [
        315,
        359
      ],
      "op": "DUP2",
      "path": "0"
    },
    "373": {
      "fn": "TokenERC20.burn",
      "offset": [
        315,
        359
      ],
      "op": "JUMP",
      "path": "0"
    },
    "374": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2643,
        3000
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "375": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2643,
        3000
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA"
    },
    "378": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2643,
        3000
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184"
    },
    "381": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2643,
        3000
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "382": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2643,
        3000
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "384": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2643,
        3000
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x788"
    },
    "387": {
      "fn": "TokenERC20.burnFrom",
      "jump": "i",
      "offset": [
        2643,
        3000
      ],
      "op": "JUMP",
      "path": "0"
    },
    "388": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2643,
        3000
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "389": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2643,
        3000
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F1"
    },
    "392": {
      "fn": "TokenERC20.burnFrom",
      "jump": "i",
      "offset": [
        2643,
        3000
      ],
      "op": "JUMP",
      "path": "0"
    },
    "393": {
      "offset": [
        224,
        244
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "394": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        224,
        244
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "397": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        224,
        244
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x50B"
    },
    "400": {
      "fn": "TokenERC20.burnFrom",
      "jump": "i",
      "offset": [
        224,
        244
      ],
      "op": "JUMP",
      "path": "0"
    },
    "401": {
      "fn": "TokenERC20.transfer",
      "offset": [
        1391,
        1539
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "402": {
      "fn": "TokenERC20.transfer",
      "offset": [
        1391,
        1539
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA"
    },
    "405": {
      "fn": "TokenERC20.transfer",
      "offset": [
        1391,
        1539
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19F"
    },
    "408": {
      "fn": "TokenERC20.transfer",
      "offset": [
        1391,
        1539
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "409": {
      "fn": "TokenERC20.transfer",
      "offset": [
        1391,
        1539
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "411": {
      "fn": "TokenERC20.transfer",
      "offset": [
        1391,
        1539
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x788"
    },
    "414": {
      "fn": "TokenERC20.transfer",
      "jump": "i",
      "offset": [
        1391,
        1539
      ],
      "op": "JUMP",
      "path": "0"
    },
    "415": {
      "fn": "TokenERC20.transfer",
      "offset": [
        1391,
        1539
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "416": {
      "fn": "TokenERC20.transfer",
      "offset": [
        1391,
        1539
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x518"
    },
    "419": {
      "fn": "TokenERC20.transfer",
      "jump": "i",
      "offset": [
        1391,
        1539
      ],
      "op": "JUMP",
      "path": "0"
    },
    "420": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2033,
        2367
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "421": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2033,
        2367
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA"
    },
    "424": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2033,
        2367
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B2"
    },
    "427": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2033,
        2367
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "428": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2033,
        2367
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "430": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2033,
        2367
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x838"
    },
    "433": {
      "fn": "TokenERC20.approveAndCall",
      "jump": "i",
      "offset": [
        2033,
        2367
      ],
      "op": "JUMP",
      "path": "0"
    },
    "434": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2033,
        2367
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "435": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2033,
        2367
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x52E"
    },
    "438": {
      "fn": "TokenERC20.approveAndCall",
      "jump": "i",
      "offset": [
        2033,
        2367
      ],
      "op": "JUMP",
      "path": "0"
    },
    "439": {
      "offset": [
        365,
        429
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "440": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        365,
        429
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x103"
    },
    "443": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        365,
        429
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C5"
    },
    "446": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        365,
        429
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "447": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        365,
        429
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "449": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        365,
        429
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x903"
    },
    "452": {
      "fn": "TokenERC20.approveAndCall",
      "jump": "i",
      "offset": [
        365,
        429
      ],
      "op": "JUMP",
      "path": "0"
    },
    "453": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        365,
        429
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "454": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        365,
        429
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "456": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        365,
        429
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "458": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        365,
        429
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "459": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        365,
        429
      ],
      "op": "DUP2",
      "path": "0"
    },
    "460": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        365,
        429
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "461": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        365,
        429
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "463": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        365,
        429
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "464": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        365,
        429
      ],
      "op": "DUP4",
      "path": "0"
    },
    "465": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        365,
        429
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "466": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        365,
        429
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "468": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        365,
        429
      ],
      "op": "DUP1",
      "path": "0"
    },
    "469": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        365,
        429
      ],
      "op": "DUP5",
      "path": "0"
    },
    "470": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        365,
        429
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "471": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        365,
        429
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "472": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        365,
        429
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "473": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        365,
        429
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "474": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        365,
        429
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "475": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        365,
        429
      ],
      "op": "DUP3",
      "path": "0"
    },
    "476": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        365,
        429
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "477": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        365,
        429
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "478": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        365,
        429
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "479": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        365,
        429
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "480": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        365,
        429
      ],
      "op": "DUP2",
      "path": "0"
    },
    "481": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        365,
        429
      ],
      "op": "JUMP",
      "path": "0"
    },
    "482": {
      "offset": [
        200,
        218
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "483": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "485": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "DUP1",
      "path": "0"
    },
    "486": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "487": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EF"
    },
    "490": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "491": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x936"
    },
    "494": {
      "fn": "TokenERC20.approveAndCall",
      "jump": "i",
      "offset": [
        200,
        218
      ],
      "op": "JUMP",
      "path": "0"
    },
    "495": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "496": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "DUP1",
      "path": "0"
    },
    "497": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "499": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "ADD",
      "path": "0"
    },
    "500": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "502": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "DUP1",
      "path": "0"
    },
    "503": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "504": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "DIV",
      "path": "0"
    },
    "505": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "MUL",
      "path": "0"
    },
    "506": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "508": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "ADD",
      "path": "0"
    },
    "509": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "511": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "512": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "513": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "DUP2",
      "path": "0"
    },
    "514": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "ADD",
      "path": "0"
    },
    "515": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "517": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "518": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "DUP1",
      "path": "0"
    },
    "519": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "520": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "521": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "522": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "DUP2",
      "path": "0"
    },
    "523": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "DUP2",
      "path": "0"
    },
    "524": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "525": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "527": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "ADD",
      "path": "0"
    },
    "528": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "DUP3",
      "path": "0"
    },
    "529": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "DUP1",
      "path": "0"
    },
    "530": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "531": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21B"
    },
    "534": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "535": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x936"
    },
    "538": {
      "fn": "TokenERC20.approveAndCall",
      "jump": "i",
      "offset": [
        200,
        218
      ],
      "op": "JUMP",
      "path": "0"
    },
    "539": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "540": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "DUP1",
      "path": "0"
    },
    "541": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "542": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x268"
    },
    "545": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "546": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "DUP1",
      "path": "0"
    },
    "547": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "549": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "LT",
      "path": "0"
    },
    "550": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23D"
    },
    "553": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "554": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "557": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "DUP1",
      "path": "0"
    },
    "558": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "DUP4",
      "path": "0"
    },
    "559": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "560": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "DIV",
      "path": "0"
    },
    "561": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "MUL",
      "path": "0"
    },
    "562": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "DUP4",
      "path": "0"
    },
    "563": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "564": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "565": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "567": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "ADD",
      "path": "0"
    },
    "568": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "569": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x268"
    },
    "572": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "JUMP",
      "path": "0"
    },
    "573": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "574": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "DUP3",
      "path": "0"
    },
    "575": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "ADD",
      "path": "0"
    },
    "576": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "577": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "578": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "580": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "581": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "583": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "585": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "586": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "587": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "588": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "DUP2",
      "path": "0"
    },
    "589": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "590": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "DUP2",
      "path": "0"
    },
    "591": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "592": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "593": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "595": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "ADD",
      "path": "0"
    },
    "596": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "597": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "599": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "ADD",
      "path": "0"
    },
    "600": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "DUP1",
      "path": "0"
    },
    "601": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "DUP4",
      "path": "0"
    },
    "602": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "GT",
      "path": "0"
    },
    "603": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24B"
    },
    "606": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "607": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "DUP3",
      "path": "0"
    },
    "608": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "609": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "SUB",
      "path": "0"
    },
    "610": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "612": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "AND",
      "path": "0"
    },
    "613": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "DUP3",
      "path": "0"
    },
    "614": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "ADD",
      "path": "0"
    },
    "615": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "616": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "617": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "POP",
      "path": "0"
    },
    "618": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "POP",
      "path": "0"
    },
    "619": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "POP",
      "path": "0"
    },
    "620": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "POP",
      "path": "0"
    },
    "621": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "POP",
      "path": "0"
    },
    "622": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        200,
        218
      ],
      "op": "DUP2",
      "path": "0"
    },
    "623": {
      "fn": "TokenERC20.approveAndCall",
      "jump": "o",
      "offset": [
        200,
        218
      ],
      "op": "JUMP",
      "path": "0"
    },
    "624": {
      "fn": "TokenERC20.approve",
      "offset": [
        1817,
        2028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "625": {
      "fn": "TokenERC20.approve",
      "offset": [
        1917,
        1927
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 0
    },
    "626": {
      "fn": "TokenERC20.approve",
      "offset": [
        1883,
        1895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "628": {
      "fn": "TokenERC20.approve",
      "offset": [
        1907,
        1928
      ],
      "op": "DUP2",
      "path": "0"
    },
    "629": {
      "fn": "TokenERC20.approve",
      "offset": [
        1907,
        1928
      ],
      "op": "DUP2",
      "path": "0"
    },
    "630": {
      "fn": "TokenERC20.approve",
      "offset": [
        1907,
        1928
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "631": {
      "fn": "TokenERC20.approve",
      "offset": [
        1907,
        1916
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "633": {
      "fn": "TokenERC20.approve",
      "offset": [
        1907,
        1928
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "635": {
      "fn": "TokenERC20.approve",
      "offset": [
        1907,
        1928
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "636": {
      "fn": "TokenERC20.approve",
      "offset": [
        1907,
        1928
      ],
      "op": "DUP2",
      "path": "0"
    },
    "637": {
      "fn": "TokenERC20.approve",
      "offset": [
        1907,
        1928
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "638": {
      "fn": "TokenERC20.approve",
      "offset": [
        1907,
        1928
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "640": {
      "fn": "TokenERC20.approve",
      "offset": [
        1907,
        1928
      ],
      "op": "DUP1",
      "path": "0"
    },
    "641": {
      "fn": "TokenERC20.approve",
      "offset": [
        1907,
        1928
      ],
      "op": "DUP4",
      "path": "0"
    },
    "642": {
      "fn": "TokenERC20.approve",
      "offset": [
        1907,
        1928
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "647": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "649": {
      "op": "SHL"
    },
    "650": {
      "op": "SUB"
    },
    "651": {
      "fn": "TokenERC20.approve",
      "offset": [
        1907,
        1938
      ],
      "op": "DUP8",
      "path": "0"
    },
    "652": {
      "fn": "TokenERC20.approve",
      "offset": [
        1907,
        1938
      ],
      "op": "AND",
      "path": "0"
    },
    "653": {
      "fn": "TokenERC20.approve",
      "offset": [
        1907,
        1938
      ],
      "op": "DUP1",
      "path": "0"
    },
    "654": {
      "fn": "TokenERC20.approve",
      "offset": [
        1907,
        1938
      ],
      "op": "DUP6",
      "path": "0"
    },
    "655": {
      "fn": "TokenERC20.approve",
      "offset": [
        1907,
        1938
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "656": {
      "fn": "TokenERC20.approve",
      "offset": [
        1907,
        1938
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "657": {
      "fn": "TokenERC20.approve",
      "offset": [
        1907,
        1938
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "658": {
      "fn": "TokenERC20.approve",
      "offset": [
        1907,
        1938
      ],
      "op": "DUP1",
      "path": "0"
    },
    "659": {
      "fn": "TokenERC20.approve",
      "offset": [
        1907,
        1938
      ],
      "op": "DUP4",
      "path": "0"
    },
    "660": {
      "fn": "TokenERC20.approve",
      "offset": [
        1907,
        1938
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "661": {
      "fn": "TokenERC20.approve",
      "offset": [
        1907,
        1947
      ],
      "op": "DUP6",
      "path": "0"
    },
    "662": {
      "fn": "TokenERC20.approve",
      "offset": [
        1907,
        1947
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "663": {
      "fn": "TokenERC20.approve",
      "offset": [
        1907,
        1947
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "664": {
      "fn": "TokenERC20.approve",
      "offset": [
        1962,
        2000
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 1
    },
    "665": {
      "fn": "TokenERC20.approve",
      "offset": [
        1883,
        1895
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "666": {
      "fn": "TokenERC20.approve",
      "offset": [
        1883,
        1895
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "667": {
      "fn": "TokenERC20.approve",
      "offset": [
        1907,
        1938
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "668": {
      "fn": "TokenERC20.approve",
      "offset": [
        1907,
        1938
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "669": {
      "fn": "TokenERC20.approve",
      "offset": [
        1962,
        2000
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "702": {
      "fn": "TokenERC20.approve",
      "offset": [
        1962,
        2000
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "703": {
      "fn": "TokenERC20.approve",
      "offset": [
        1962,
        2000
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CB"
    },
    "706": {
      "fn": "TokenERC20.approve",
      "offset": [
        1962,
        2000
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "707": {
      "fn": "TokenERC20.approve",
      "offset": [
        1941,
        1947
      ],
      "op": "DUP7",
      "path": "0"
    },
    "708": {
      "op": "DUP2"
    },
    "709": {
      "op": "MSTORE"
    },
    "710": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "712": {
      "op": "ADD"
    },
    "713": {
      "op": "SWAP1"
    },
    "714": {
      "op": "JUMP"
    },
    "715": {
      "fn": "TokenERC20.approve",
      "offset": [
        1962,
        2000
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "716": {
      "fn": "TokenERC20.approve",
      "offset": [
        1962,
        2000
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "718": {
      "fn": "TokenERC20.approve",
      "offset": [
        1962,
        2000
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "719": {
      "fn": "TokenERC20.approve",
      "offset": [
        1962,
        2000
      ],
      "op": "DUP1",
      "path": "0"
    },
    "720": {
      "fn": "TokenERC20.approve",
      "offset": [
        1962,
        2000
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "721": {
      "fn": "TokenERC20.approve",
      "offset": [
        1962,
        2000
      ],
      "op": "SUB",
      "path": "0"
    },
    "722": {
      "fn": "TokenERC20.approve",
      "offset": [
        1962,
        2000
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "723": {
      "fn": "TokenERC20.approve",
      "offset": [
        1962,
        2000
      ],
      "op": "LOG3",
      "path": "0"
    },
    "724": {
      "op": "POP"
    },
    "725": {
      "fn": "TokenERC20.approve",
      "offset": [
        2017,
        2021
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x1"
    },
    "727": {
      "fn": "TokenERC20.approve",
      "offset": [
        1817,
        2028
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "728": {
      "fn": "TokenERC20.approve",
      "offset": [
        1817,
        2028
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "729": {
      "fn": "TokenERC20.approve",
      "offset": [
        1817,
        2028
      ],
      "op": "POP",
      "path": "0"
    },
    "730": {
      "fn": "TokenERC20.approve",
      "offset": [
        1817,
        2028
      ],
      "op": "POP",
      "path": "0"
    },
    "731": {
      "fn": "TokenERC20.approve",
      "jump": "o",
      "offset": [
        1817,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "732": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1544,
        1811
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "737": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "739": {
      "op": "SHL"
    },
    "740": {
      "op": "SUB"
    },
    "741": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1667,
        1683
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 3
    },
    "742": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1667,
        1683
      ],
      "op": "AND",
      "path": "0"
    },
    "743": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1625,
        1637
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "745": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1667,
        1683
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "746": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1667,
        1683
      ],
      "op": "DUP2",
      "path": "0"
    },
    "747": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1667,
        1683
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "748": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1667,
        1676
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "750": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1667,
        1683
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "752": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1667,
        1683
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "753": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1667,
        1683
      ],
      "op": "DUP2",
      "path": "0"
    },
    "754": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1667,
        1683
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "755": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1667,
        1683
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "757": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1667,
        1683
      ],
      "op": "DUP1",
      "path": "0"
    },
    "758": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1667,
        1683
      ],
      "op": "DUP4",
      "path": "0"
    },
    "759": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1667,
        1683
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "760": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1684,
        1694
      ],
      "op": "CALLER",
      "path": "0"
    },
    "761": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1667,
        1695
      ],
      "op": "DUP5",
      "path": "0"
    },
    "762": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1667,
        1695
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "763": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1667,
        1695
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "764": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1667,
        1695
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "765": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1667,
        1695
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "766": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1667,
        1695
      ],
      "op": "DUP2",
      "path": "0"
    },
    "767": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1667,
        1695
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "768": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1667,
        1695
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "769": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1657,
        1695
      ],
      "op": "DUP3",
      "path": "0"
    },
    "770": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1657,
        1695
      ],
      "op": "GT",
      "path": "0"
    },
    "771": {
      "branch": 29,
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1657,
        1695
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "772": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1649,
        1696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x30C"
    },
    "775": {
      "branch": 29,
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1649,
        1696
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "776": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1649,
        1696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "778": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1649,
        1696
      ],
      "op": "DUP1",
      "path": "0"
    },
    "779": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1649,
        1696
      ],
      "op": "REVERT",
      "path": "0"
    },
    "780": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1649,
        1696
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "785": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "787": {
      "op": "SHL"
    },
    "788": {
      "op": "SUB"
    },
    "789": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1706,
        1722
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 4
    },
    "790": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1706,
        1722
      ],
      "op": "AND",
      "path": "0"
    },
    "791": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1706,
        1722
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "793": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1706,
        1722
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "794": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1706,
        1722
      ],
      "op": "DUP2",
      "path": "0"
    },
    "795": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1706,
        1722
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "796": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1706,
        1715
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "798": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1706,
        1722
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "800": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1706,
        1722
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "801": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1706,
        1722
      ],
      "op": "DUP2",
      "path": "0"
    },
    "802": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1706,
        1722
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "803": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1706,
        1722
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "805": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1706,
        1722
      ],
      "op": "DUP1",
      "path": "0"
    },
    "806": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1706,
        1722
      ],
      "op": "DUP4",
      "path": "0"
    },
    "807": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1706,
        1722
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "808": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1723,
        1733
      ],
      "op": "CALLER",
      "path": "0"
    },
    "809": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1706,
        1734
      ],
      "op": "DUP5",
      "path": "0"
    },
    "810": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1706,
        1734
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "811": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1706,
        1734
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "812": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1706,
        1734
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "813": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1706,
        1734
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "814": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1706,
        1734
      ],
      "op": "DUP2",
      "path": "0"
    },
    "815": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1706,
        1734
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "816": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1706,
        1744
      ],
      "op": "DUP1",
      "path": "0"
    },
    "817": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1706,
        1744
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "818": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1738,
        1744
      ],
      "op": "DUP5",
      "path": "0"
    },
    "819": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1738,
        1744
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "820": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1706,
        1722
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "821": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1706,
        1744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33F"
    },
    "824": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1706,
        1744
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "825": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1738,
        1744
      ],
      "op": "DUP5",
      "path": "0"
    },
    "826": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1738,
        1744
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "827": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1706,
        1744
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x987"
    },
    "830": {
      "fn": "TokenERC20.transferFrom",
      "jump": "i",
      "offset": [
        1706,
        1744
      ],
      "op": "JUMP",
      "path": "0"
    },
    "831": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1706,
        1744
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "832": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1706,
        1744
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "833": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1706,
        1744
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "834": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1706,
        1744
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "835": {
      "op": "POP"
    },
    "836": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1754,
        1783
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 5,
      "value": "0x350"
    },
    "839": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1754,
        1783
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "840": {
      "op": "POP"
    },
    "841": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1764,
        1769
      ],
      "op": "DUP5",
      "path": "0"
    },
    "842": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1771,
        1774
      ],
      "op": "DUP5",
      "path": "0"
    },
    "843": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1776,
        1782
      ],
      "op": "DUP5",
      "path": "0"
    },
    "844": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1754,
        1763
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B8"
    },
    "847": {
      "fn": "TokenERC20.transferFrom",
      "jump": "i",
      "offset": [
        1754,
        1783
      ],
      "op": "JUMP",
      "path": "0"
    },
    "848": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1754,
        1783
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "849": {
      "op": "POP"
    },
    "850": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1800,
        1804
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x1"
    },
    "852": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1544,
        1811
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "853": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1544,
        1811
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "854": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1544,
        1811
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "855": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1544,
        1811
      ],
      "op": "POP",
      "path": "0"
    },
    "856": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1544,
        1811
      ],
      "op": "POP",
      "path": "0"
    },
    "857": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        1544,
        1811
      ],
      "op": "POP",
      "path": "0"
    },
    "858": {
      "fn": "TokenERC20.transferFrom",
      "jump": "o",
      "offset": [
        1544,
        1811
      ],
      "op": "JUMP",
      "path": "0"
    },
    "859": {
      "fn": "TokenERC20.burn",
      "offset": [
        2372,
        2637
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "860": {
      "fn": "TokenERC20.burn",
      "offset": [
        2461,
        2471
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 7
    },
    "861": {
      "fn": "TokenERC20.burn",
      "offset": [
        2418,
        2430
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "863": {
      "fn": "TokenERC20.burn",
      "offset": [
        2451,
        2472
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "864": {
      "fn": "TokenERC20.burn",
      "offset": [
        2451,
        2472
      ],
      "op": "DUP2",
      "path": "0"
    },
    "865": {
      "fn": "TokenERC20.burn",
      "offset": [
        2451,
        2472
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "866": {
      "fn": "TokenERC20.burn",
      "offset": [
        2451,
        2460
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "868": {
      "fn": "TokenERC20.burn",
      "offset": [
        2451,
        2472
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "870": {
      "fn": "TokenERC20.burn",
      "offset": [
        2451,
        2472
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "871": {
      "fn": "TokenERC20.burn",
      "offset": [
        2451,
        2472
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "873": {
      "fn": "TokenERC20.burn",
      "offset": [
        2451,
        2472
      ],
      "op": "DUP2",
      "path": "0"
    },
    "874": {
      "fn": "TokenERC20.burn",
      "offset": [
        2451,
        2472
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "875": {
      "fn": "TokenERC20.burn",
      "offset": [
        2451,
        2472
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "876": {
      "fn": "TokenERC20.burn",
      "offset": [
        2451,
        2481
      ],
      "op": "DUP3",
      "path": "0"
    },
    "877": {
      "op": "GT"
    },
    "878": {
      "branch": 30,
      "fn": "TokenERC20.burn",
      "offset": [
        2451,
        2481
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "879": {
      "fn": "TokenERC20.burn",
      "offset": [
        2443,
        2482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x377"
    },
    "882": {
      "branch": 30,
      "fn": "TokenERC20.burn",
      "offset": [
        2443,
        2482
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "883": {
      "fn": "TokenERC20.burn",
      "offset": [
        2443,
        2482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "885": {
      "fn": "TokenERC20.burn",
      "offset": [
        2443,
        2482
      ],
      "op": "DUP1",
      "path": "0"
    },
    "886": {
      "fn": "TokenERC20.burn",
      "offset": [
        2443,
        2482
      ],
      "op": "REVERT",
      "path": "0"
    },
    "887": {
      "fn": "TokenERC20.burn",
      "offset": [
        2443,
        2482
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "888": {
      "fn": "TokenERC20.burn",
      "offset": [
        2506,
        2516
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 8
    },
    "889": {
      "fn": "TokenERC20.burn",
      "offset": [
        2496,
        2517
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "891": {
      "fn": "TokenERC20.burn",
      "offset": [
        2496,
        2517
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "892": {
      "fn": "TokenERC20.burn",
      "offset": [
        2496,
        2517
      ],
      "op": "DUP2",
      "path": "0"
    },
    "893": {
      "fn": "TokenERC20.burn",
      "offset": [
        2496,
        2517
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "894": {
      "fn": "TokenERC20.burn",
      "offset": [
        2496,
        2505
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "896": {
      "fn": "TokenERC20.burn",
      "offset": [
        2496,
        2517
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "898": {
      "fn": "TokenERC20.burn",
      "offset": [
        2496,
        2517
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "899": {
      "fn": "TokenERC20.burn",
      "offset": [
        2496,
        2517
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "901": {
      "fn": "TokenERC20.burn",
      "offset": [
        2496,
        2517
      ],
      "op": "DUP2",
      "path": "0"
    },
    "902": {
      "fn": "TokenERC20.burn",
      "offset": [
        2496,
        2517
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "903": {
      "fn": "TokenERC20.burn",
      "offset": [
        2496,
        2527
      ],
      "op": "DUP1",
      "path": "0"
    },
    "904": {
      "fn": "TokenERC20.burn",
      "offset": [
        2496,
        2527
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "905": {
      "fn": "TokenERC20.burn",
      "offset": [
        2521,
        2527
      ],
      "op": "DUP5",
      "path": "0"
    },
    "906": {
      "fn": "TokenERC20.burn",
      "offset": [
        2521,
        2527
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "907": {
      "fn": "TokenERC20.burn",
      "offset": [
        2496,
        2517
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "908": {
      "fn": "TokenERC20.burn",
      "offset": [
        2496,
        2527
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x396"
    },
    "911": {
      "fn": "TokenERC20.burn",
      "offset": [
        2496,
        2527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "912": {
      "fn": "TokenERC20.burn",
      "offset": [
        2521,
        2527
      ],
      "op": "DUP5",
      "path": "0"
    },
    "913": {
      "fn": "TokenERC20.burn",
      "offset": [
        2521,
        2527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "914": {
      "fn": "TokenERC20.burn",
      "offset": [
        2496,
        2527
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x987"
    },
    "917": {
      "fn": "TokenERC20.burn",
      "jump": "i",
      "offset": [
        2496,
        2527
      ],
      "op": "JUMP",
      "path": "0"
    },
    "918": {
      "fn": "TokenERC20.burn",
      "offset": [
        2496,
        2527
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "919": {
      "fn": "TokenERC20.burn",
      "offset": [
        2496,
        2527
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "920": {
      "fn": "TokenERC20.burn",
      "offset": [
        2496,
        2527
      ],
      "op": "POP",
      "path": "0"
    },
    "921": {
      "fn": "TokenERC20.burn",
      "offset": [
        2496,
        2527
      ],
      "op": "POP",
      "path": "0"
    },
    "922": {
      "fn": "TokenERC20.burn",
      "offset": [
        2496,
        2527
      ],
      "op": "DUP2",
      "path": "0"
    },
    "923": {
      "fn": "TokenERC20.burn",
      "offset": [
        2496,
        2527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "924": {
      "fn": "TokenERC20.burn",
      "offset": [
        2496,
        2527
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "925": {
      "fn": "TokenERC20.burn",
      "offset": [
        2496,
        2527
      ],
      "op": "POP",
      "path": "0"
    },
    "926": {
      "fn": "TokenERC20.burn",
      "offset": [
        2556,
        2562
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 9
    },
    "927": {
      "fn": "TokenERC20.burn",
      "offset": [
        2541,
        2552
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "929": {
      "fn": "TokenERC20.burn",
      "offset": [
        2541,
        2552
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "931": {
      "fn": "TokenERC20.burn",
      "offset": [
        2541,
        2562
      ],
      "op": "DUP3",
      "path": "0"
    },
    "932": {
      "fn": "TokenERC20.burn",
      "offset": [
        2541,
        2562
      ],
      "op": "DUP3",
      "path": "0"
    },
    "933": {
      "fn": "TokenERC20.burn",
      "offset": [
        2541,
        2562
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "934": {
      "fn": "TokenERC20.burn",
      "offset": [
        2541,
        2562
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3AF"
    },
    "937": {
      "fn": "TokenERC20.burn",
      "offset": [
        2541,
        2562
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "938": {
      "fn": "TokenERC20.burn",
      "offset": [
        2541,
        2562
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "939": {
      "fn": "TokenERC20.burn",
      "offset": [
        2541,
        2562
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x987"
    },
    "942": {
      "fn": "TokenERC20.burn",
      "jump": "i",
      "offset": [
        2541,
        2562
      ],
      "op": "JUMP",
      "path": "0"
    },
    "943": {
      "fn": "TokenERC20.burn",
      "offset": [
        2541,
        2562
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "944": {
      "fn": "TokenERC20.burn",
      "offset": [
        2541,
        2562
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "945": {
      "fn": "TokenERC20.burn",
      "offset": [
        2541,
        2562
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "946": {
      "fn": "TokenERC20.burn",
      "offset": [
        2541,
        2562
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "947": {
      "op": "POP"
    },
    "948": {
      "op": "POP"
    },
    "949": {
      "fn": "TokenERC20.burn",
      "offset": [
        2581,
        2605
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x40"
    },
    "951": {
      "fn": "TokenERC20.burn",
      "offset": [
        2581,
        2605
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "952": {
      "op": "DUP3"
    },
    "953": {
      "op": "DUP2"
    },
    "954": {
      "op": "MSTORE"
    },
    "955": {
      "fn": "TokenERC20.burn",
      "offset": [
        2586,
        2596
      ],
      "op": "CALLER",
      "path": "0"
    },
    "956": {
      "fn": "TokenERC20.burn",
      "offset": [
        2586,
        2596
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "957": {
      "fn": "TokenERC20.burn",
      "offset": [
        2581,
        2605
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5"
    },
    "990": {
      "fn": "TokenERC20.burn",
      "offset": [
        2581,
        2605
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "991": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "993": {
      "op": "ADD"
    },
    "994": {
      "fn": "TokenERC20.burn",
      "offset": [
        2581,
        2605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "996": {
      "fn": "TokenERC20.burn",
      "offset": [
        2581,
        2605
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "997": {
      "fn": "TokenERC20.burn",
      "offset": [
        2581,
        2605
      ],
      "op": "DUP1",
      "path": "0"
    },
    "998": {
      "fn": "TokenERC20.burn",
      "offset": [
        2581,
        2605
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "999": {
      "fn": "TokenERC20.burn",
      "offset": [
        2581,
        2605
      ],
      "op": "SUB",
      "path": "0"
    },
    "1000": {
      "fn": "TokenERC20.burn",
      "offset": [
        2581,
        2605
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1001": {
      "fn": "TokenERC20.burn",
      "offset": [
        2581,
        2605
      ],
      "op": "LOG2",
      "path": "0"
    },
    "1002": {
      "op": "POP"
    },
    "1003": {
      "fn": "TokenERC20.burn",
      "offset": [
        2626,
        2630
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x1"
    },
    "1005": {
      "fn": "TokenERC20.burn",
      "offset": [
        2626,
        2630
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1006": {
      "fn": "TokenERC20.burn",
      "offset": [
        2372,
        2637
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1007": {
      "op": "POP"
    },
    "1008": {
      "fn": "TokenERC20.burn",
      "jump": "o",
      "offset": [
        2372,
        2637
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1009": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2643,
        3000
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1016": {
      "op": "SHL"
    },
    "1017": {
      "op": "SUB"
    },
    "1018": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2739,
        2755
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 12
    },
    "1019": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2739,
        2755
      ],
      "op": "AND",
      "path": "0"
    },
    "1020": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2707,
        2719
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1022": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2739,
        2755
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1023": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2739,
        2755
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1024": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2739,
        2755
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1025": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2739,
        2748
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1027": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2739,
        2755
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1029": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2739,
        2755
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1030": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2739,
        2755
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1032": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2739,
        2755
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1033": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2739,
        2755
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1034": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2739,
        2755
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1035": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2739,
        2765
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1036": {
      "op": "GT"
    },
    "1037": {
      "branch": 31,
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2739,
        2765
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1038": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2731,
        2766
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x416"
    },
    "1041": {
      "branch": 31,
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2731,
        2766
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1042": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2731,
        2766
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1044": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2731,
        2766
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1045": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2731,
        2766
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1046": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2731,
        2766
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1051": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1053": {
      "op": "SHL"
    },
    "1054": {
      "op": "SUB"
    },
    "1055": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2793,
        2809
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 13
    },
    "1056": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2793,
        2809
      ],
      "op": "AND",
      "path": "0"
    },
    "1057": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2793,
        2809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1059": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2793,
        2809
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1060": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2793,
        2809
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1061": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2793,
        2809
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1062": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2793,
        2802
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1064": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2793,
        2809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1066": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2793,
        2809
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1067": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2793,
        2809
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1068": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2793,
        2809
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1069": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2793,
        2809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1071": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2793,
        2809
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1072": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2793,
        2809
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1073": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2793,
        2809
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1074": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2810,
        2820
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1075": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2793,
        2821
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1076": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2793,
        2821
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1077": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2793,
        2821
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1078": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2793,
        2821
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1079": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2793,
        2821
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1080": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2793,
        2821
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1081": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2793,
        2821
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1082": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2793,
        2821
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1083": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2784,
        2821
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1084": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2784,
        2821
      ],
      "op": "GT",
      "path": "0"
    },
    "1085": {
      "branch": 32,
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2784,
        2821
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1086": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2776,
        2822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x446"
    },
    "1089": {
      "branch": 32,
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2776,
        2822
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1090": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2776,
        2822
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1092": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2776,
        2822
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1093": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2776,
        2822
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1094": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2776,
        2822
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1099": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1101": {
      "op": "SHL"
    },
    "1102": {
      "op": "SUB"
    },
    "1103": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2832,
        2848
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 14
    },
    "1104": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2832,
        2848
      ],
      "op": "AND",
      "path": "0"
    },
    "1105": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2832,
        2848
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1107": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2832,
        2848
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1108": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2832,
        2848
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1109": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2832,
        2848
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1110": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2832,
        2841
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1112": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2832,
        2848
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1114": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2832,
        2848
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1115": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2832,
        2848
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1117": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2832,
        2848
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1118": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2832,
        2848
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1119": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2832,
        2858
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1120": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2832,
        2858
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1121": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2852,
        2858
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1122": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2852,
        2858
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1123": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2832,
        2848
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1124": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2832,
        2858
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46E"
    },
    "1127": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2832,
        2858
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1128": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2852,
        2858
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1129": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2852,
        2858
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1130": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2832,
        2858
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x987"
    },
    "1133": {
      "fn": "TokenERC20.burnFrom",
      "jump": "i",
      "offset": [
        2832,
        2858
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1134": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2832,
        2858
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1135": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2832,
        2858
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1136": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2832,
        2858
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1137": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2832,
        2858
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1138": {
      "op": "POP"
    },
    "1139": {
      "op": "POP"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1146": {
      "op": "SHL"
    },
    "1147": {
      "op": "SUB"
    },
    "1148": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2884
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 15
    },
    "1149": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2884
      ],
      "op": "AND",
      "path": "0"
    },
    "1150": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1152": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1153": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2884
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1154": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2884
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1155": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2877
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1157": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1159": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1160": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2884
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1161": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2884
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1162": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1164": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2884
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1165": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2884
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1166": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2884
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1167": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2885,
        2895
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1168": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2896
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1169": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2896
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1170": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2896
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1171": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2896
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1172": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2896
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1173": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2896
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1174": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2896
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1175": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1176": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2906
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1177": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2900,
        2906
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1178": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2900,
        2906
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1179": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1180": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2906
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A6"
    },
    "1183": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2906
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1184": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2900,
        2906
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1185": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2900,
        2906
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1186": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2906
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x987"
    },
    "1189": {
      "fn": "TokenERC20.burnFrom",
      "jump": "i",
      "offset": [
        2868,
        2906
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1190": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2906
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1191": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2906
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1192": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2906
      ],
      "op": "POP",
      "path": "0"
    },
    "1193": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2906
      ],
      "op": "POP",
      "path": "0"
    },
    "1194": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2906
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1195": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2906
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1196": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2906
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1197": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2868,
        2906
      ],
      "op": "POP",
      "path": "0"
    },
    "1198": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2931,
        2937
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 16
    },
    "1199": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2916,
        2927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1201": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2916,
        2927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1203": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2916,
        2937
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1204": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2916,
        2937
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1205": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2916,
        2937
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1206": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2916,
        2937
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BF"
    },
    "1209": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2916,
        2937
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1210": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2916,
        2937
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1211": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2916,
        2937
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x987"
    },
    "1214": {
      "fn": "TokenERC20.burnFrom",
      "jump": "i",
      "offset": [
        2916,
        2937
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1215": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2916,
        2937
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1216": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2916,
        2937
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1217": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2916,
        2937
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1218": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2916,
        2937
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1219": {
      "op": "POP"
    },
    "1220": {
      "op": "POP"
    },
    "1221": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2952,
        2971
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x40"
    },
    "1223": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2952,
        2971
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1224": {
      "op": "DUP3"
    },
    "1225": {
      "op": "DUP2"
    },
    "1226": {
      "op": "MSTORE"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1231": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1233": {
      "op": "SHL"
    },
    "1234": {
      "op": "SUB"
    },
    "1235": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2952,
        2971
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1236": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2952,
        2971
      ],
      "op": "AND",
      "path": "0"
    },
    "1237": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2952,
        2971
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1238": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2952,
        2971
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5"
    },
    "1271": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2952,
        2971
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1274": {
      "op": "ADD"
    },
    "1275": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2952,
        2971
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1277": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2952,
        2971
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1278": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2952,
        2971
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1279": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2952,
        2971
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1280": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2952,
        2971
      ],
      "op": "SUB",
      "path": "0"
    },
    "1281": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2952,
        2971
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1282": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2952,
        2971
      ],
      "op": "LOG2",
      "path": "0"
    },
    "1283": {
      "op": "POP"
    },
    "1284": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2988,
        2992
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x1"
    },
    "1286": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2643,
        3000
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1287": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2643,
        3000
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1288": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2643,
        3000
      ],
      "op": "POP",
      "path": "0"
    },
    "1289": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        2643,
        3000
      ],
      "op": "POP",
      "path": "0"
    },
    "1290": {
      "fn": "TokenERC20.burnFrom",
      "jump": "o",
      "offset": [
        2643,
        3000
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1291": {
      "offset": [
        224,
        244
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1292": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        224,
        244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1294": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        224,
        244
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1295": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        224,
        244
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1296": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        224,
        244
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EF"
    },
    "1299": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        224,
        244
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1300": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        224,
        244
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x936"
    },
    "1303": {
      "fn": "TokenERC20.burnFrom",
      "jump": "i",
      "offset": [
        224,
        244
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1304": {
      "fn": "TokenERC20.transfer",
      "offset": [
        1391,
        1539
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1305": {
      "fn": "TokenERC20.transfer",
      "offset": [
        1453,
        1465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1307": {
      "fn": "TokenERC20.transfer",
      "offset": [
        1477,
        1511
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 19,
      "value": "0x525"
    },
    "1310": {
      "fn": "TokenERC20.transfer",
      "offset": [
        1487,
        1497
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1311": {
      "fn": "TokenERC20.transfer",
      "offset": [
        1499,
        1502
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1312": {
      "fn": "TokenERC20.transfer",
      "offset": [
        1504,
        1510
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1313": {
      "fn": "TokenERC20.transfer",
      "offset": [
        1477,
        1486
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B8"
    },
    "1316": {
      "fn": "TokenERC20.transfer",
      "jump": "i",
      "offset": [
        1477,
        1511
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1317": {
      "fn": "TokenERC20.transfer",
      "offset": [
        1477,
        1511
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1318": {
      "op": "POP"
    },
    "1319": {
      "fn": "TokenERC20.transfer",
      "offset": [
        1528,
        1532
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 20,
      "value": "0x1"
    },
    "1321": {
      "fn": "TokenERC20.transfer",
      "offset": [
        1391,
        1539
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1322": {
      "fn": "TokenERC20.transfer",
      "offset": [
        1391,
        1539
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1323": {
      "fn": "TokenERC20.transfer",
      "offset": [
        1391,
        1539
      ],
      "op": "POP",
      "path": "0"
    },
    "1324": {
      "fn": "TokenERC20.transfer",
      "offset": [
        1391,
        1539
      ],
      "op": "POP",
      "path": "0"
    },
    "1325": {
      "fn": "TokenERC20.transfer",
      "jump": "o",
      "offset": [
        1391,
        1539
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1326": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2033,
        2367
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1327": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2136,
        2148
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1329": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2200,
        2208
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1330": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2222,
        2247
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x53B"
    },
    "1333": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2200,
        2208
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1334": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2240,
        2246
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1335": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2222,
        2229
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x270"
    },
    "1338": {
      "fn": "TokenERC20.approveAndCall",
      "jump": "i",
      "offset": [
        2222,
        2247
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1339": {
      "branch": 33,
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2222,
        2247
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1340": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2219,
        2361
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1341": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2219,
        2361
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B0"
    },
    "1344": {
      "branch": 33,
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2219,
        2361
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1345": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x40"
    },
    "1347": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1348": {
      "op": "PUSH4",
      "value": "0x74C499B"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1355": {
      "op": "SHL"
    },
    "1356": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1357": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1358": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2287,
        2297
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1359": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1361": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1362": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "ADD",
      "path": "0"
    },
    "1363": {
      "op": "MSTORE"
    },
    "1364": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1366": {
      "op": "DUP2"
    },
    "1367": {
      "op": "ADD"
    },
    "1368": {
      "op": "DUP6"
    },
    "1369": {
      "op": "SWAP1"
    },
    "1370": {
      "op": "MSTORE"
    },
    "1371": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2315,
        2319
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1374": {
      "op": "DUP3"
    },
    "1375": {
      "op": "ADD"
    },
    "1376": {
      "op": "MSTORE"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1381": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1383": {
      "op": "SHL"
    },
    "1384": {
      "op": "SUB"
    },
    "1385": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2286
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1386": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2286
      ],
      "op": "AND",
      "path": "0"
    },
    "1387": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2286
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1388": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2286
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3A624CD8"
    },
    "1393": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2286
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1396": {
      "op": "ADD"
    },
    "1397": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1399": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1401": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1402": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1403": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1404": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "SUB",
      "path": "0"
    },
    "1405": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1406": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1408": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1409": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1410": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "1411": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1412": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1413": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1414": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x58E"
    },
    "1417": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1418": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1420": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1421": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1422": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1423": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "POP",
      "path": "0"
    },
    "1424": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "GAS",
      "path": "0"
    },
    "1425": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "CALL",
      "path": "0"
    },
    "1426": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1427": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1428": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1429": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A2"
    },
    "1432": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1433": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1434": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1436": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1437": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1438": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1439": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1441": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1442": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1443": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "POP",
      "path": "0"
    },
    "1444": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "POP",
      "path": "0"
    },
    "1445": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "POP",
      "path": "0"
    },
    "1446": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2263,
        2321
      ],
      "op": "POP",
      "path": "0"
    },
    "1447": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2342,
        2346
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0x1"
    },
    "1449": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2335,
        2346
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1450": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2335,
        2346
      ],
      "op": "POP",
      "path": "0"
    },
    "1451": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2335,
        2346
      ],
      "op": "POP",
      "path": "0"
    },
    "1452": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2335,
        2346
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x354"
    },
    "1455": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2335,
        2346
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1456": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2219,
        2361
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1457": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2150,
        2367
      ],
      "op": "POP",
      "path": "0"
    },
    "1458": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2033,
        2367
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1459": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2033,
        2367
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1460": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2033,
        2367
      ],
      "op": "POP",
      "path": "0"
    },
    "1461": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2033,
        2367
      ],
      "op": "POP",
      "path": "0"
    },
    "1462": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        2033,
        2367
      ],
      "op": "POP",
      "path": "0"
    },
    "1463": {
      "fn": "TokenERC20.approveAndCall",
      "jump": "o",
      "offset": [
        2033,
        2367
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1464": {
      "fn": "TokenERC20._transfer",
      "offset": [
        960,
        1386
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1471": {
      "op": "SHL"
    },
    "1472": {
      "op": "SUB"
    },
    "1473": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1051,
        1068
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 23
    },
    "1474": {
      "branch": 34,
      "fn": "TokenERC20._transfer",
      "offset": [
        1051,
        1068
      ],
      "op": "AND",
      "path": "0"
    },
    "1475": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1043,
        1069
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CB"
    },
    "1478": {
      "branch": 34,
      "fn": "TokenERC20._transfer",
      "offset": [
        1043,
        1069
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1479": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1043,
        1069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1481": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1043,
        1069
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1482": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1043,
        1069
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1483": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1043,
        1069
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1488": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1490": {
      "op": "SHL"
    },
    "1491": {
      "op": "SUB"
    },
    "1492": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1088,
        1104
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 24
    },
    "1493": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1088,
        1104
      ],
      "op": "AND",
      "path": "0"
    },
    "1494": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1088,
        1104
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1496": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1088,
        1104
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1497": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1088,
        1104
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1498": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1088,
        1104
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1499": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1088,
        1097
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1501": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1088,
        1104
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1503": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1088,
        1104
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1504": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1088,
        1104
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1506": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1088,
        1104
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1507": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1088,
        1104
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1508": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1088,
        1104
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1509": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1088,
        1112
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1510": {
      "op": "GT"
    },
    "1511": {
      "branch": 35,
      "fn": "TokenERC20._transfer",
      "offset": [
        1088,
        1112
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1512": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1080,
        1113
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5F0"
    },
    "1515": {
      "branch": 35,
      "fn": "TokenERC20._transfer",
      "offset": [
        1080,
        1113
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1516": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1080,
        1113
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1518": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1080,
        1113
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1519": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1080,
        1113
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1520": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1080,
        1113
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1527": {
      "op": "SHL"
    },
    "1528": {
      "op": "SUB"
    },
    "1529": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1178,
        1192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1530": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1178,
        1192
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1531": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1178,
        1192
      ],
      "op": "AND",
      "path": "0"
    },
    "1532": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1134,
        1155
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1534": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1178,
        1192
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1535": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1178,
        1192
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1536": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1178,
        1192
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1537": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1178,
        1187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1539": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1178,
        1192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1541": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1178,
        1192
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1542": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1178,
        1192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1544": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1178,
        1192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1545": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1178,
        1192
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1546": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1178,
        1192
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1547": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1178,
        1192
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1548": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1158,
        1174
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1549": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1158,
        1174
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1550": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1158,
        1174
      ],
      "op": "AND",
      "path": "0"
    },
    "1551": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1158,
        1174
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1552": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1158,
        1174
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1553": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1158,
        1174
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1554": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1158,
        1174
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1555": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1158,
        1192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1556": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1158,
        1192
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1557": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1134,
        1155
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1558": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1134,
        1155
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1559": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1178,
        1192
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1560": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1134,
        1155
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1561": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1134,
        1155
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1562": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1158,
        1192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x624"
    },
    "1565": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1158,
        1192
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1566": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1178,
        1192
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1567": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1178,
        1192
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1568": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1158,
        1192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x99E"
    },
    "1571": {
      "fn": "TokenERC20._transfer",
      "jump": "i",
      "offset": [
        1158,
        1192
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1572": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1158,
        1192
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1573": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1158,
        1192
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1574": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1158,
        1192
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1575": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1158,
        1192
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1576": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1158,
        1192
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1577": {
      "op": "POP"
    },
    "1578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1582": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1584": {
      "op": "SHL"
    },
    "1585": {
      "op": "SUB"
    },
    "1586": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1203,
        1219
      ],
      "op": "DUP7",
      "path": "0",
      "statement": 25
    },
    "1587": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1203,
        1219
      ],
      "op": "AND",
      "path": "0"
    },
    "1588": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1203,
        1219
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1590": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1203,
        1219
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1591": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1203,
        1219
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1592": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1203,
        1219
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1593": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1203,
        1212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1595": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1203,
        1219
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1597": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1203,
        1219
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1598": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1203,
        1219
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1600": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1203,
        1219
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1601": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1203,
        1219
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1602": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1203,
        1227
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1603": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1203,
        1227
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1604": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1158,
        1192
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1605": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1158,
        1192
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1606": {
      "op": "POP"
    },
    "1607": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1221,
        1227
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1608": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1221,
        1227
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1609": {
      "op": "POP"
    },
    "1610": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1203,
        1219
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1611": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1203,
        1227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x655"
    },
    "1614": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1203,
        1227
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1615": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1221,
        1227
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1616": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1221,
        1227
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1617": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1203,
        1227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x987"
    },
    "1620": {
      "fn": "TokenERC20._transfer",
      "jump": "i",
      "offset": [
        1203,
        1227
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1621": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1203,
        1227
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1622": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1203,
        1227
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1623": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1203,
        1227
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1624": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1203,
        1227
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1625": {
      "op": "POP"
    },
    "1626": {
      "op": "POP"
    },
    "1627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1631": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1633": {
      "op": "SHL"
    },
    "1634": {
      "op": "SUB"
    },
    "1635": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1238,
        1254
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 26
    },
    "1636": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1238,
        1254
      ],
      "op": "AND",
      "path": "0"
    },
    "1637": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1238,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1639": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1238,
        1254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1640": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1238,
        1254
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1641": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1238,
        1254
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1642": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1238,
        1247
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1644": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1238,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1646": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1238,
        1254
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1647": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1238,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1649": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1238,
        1254
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1650": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1238,
        1254
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1651": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1238,
        1262
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1652": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1238,
        1262
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1653": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1256,
        1262
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1654": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1256,
        1262
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1655": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1238,
        1254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1656": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1238,
        1262
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x682"
    },
    "1659": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1238,
        1262
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1660": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1256,
        1262
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1661": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1256,
        1262
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1662": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1238,
        1262
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x99E"
    },
    "1665": {
      "fn": "TokenERC20._transfer",
      "jump": "i",
      "offset": [
        1238,
        1262
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1666": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1238,
        1262
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1667": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1238,
        1262
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1668": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1238,
        1262
      ],
      "op": "POP",
      "path": "0"
    },
    "1669": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1238,
        1262
      ],
      "op": "POP",
      "path": "0"
    },
    "1670": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1238,
        1262
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1671": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1238,
        1262
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1672": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1238,
        1262
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1673": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1238,
        1262
      ],
      "op": "POP",
      "path": "0"
    },
    "1674": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1294,
        1297
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 27
    },
    "1675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1679": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1681": {
      "op": "SHL"
    },
    "1682": {
      "op": "SUB"
    },
    "1683": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1278,
        1306
      ],
      "op": "AND",
      "path": "0"
    },
    "1684": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1287,
        1292
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1689": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1691": {
      "op": "SHL"
    },
    "1692": {
      "op": "SUB"
    },
    "1693": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1278,
        1306
      ],
      "op": "AND",
      "path": "0"
    },
    "1694": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1278,
        1306
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1727": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1299,
        1305
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1728": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1278,
        1306
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1730": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1278,
        1306
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1731": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1278,
        1306
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6CE"
    },
    "1734": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1278,
        1306
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1735": {
      "op": "DUP2"
    },
    "1736": {
      "op": "MSTORE"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1739": {
      "op": "ADD"
    },
    "1740": {
      "op": "SWAP1"
    },
    "1741": {
      "op": "JUMP"
    },
    "1742": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1278,
        1306
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1743": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1278,
        1306
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1745": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1278,
        1306
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1746": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1278,
        1306
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1747": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1278,
        1306
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1748": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1278,
        1306
      ],
      "op": "SUB",
      "path": "0"
    },
    "1749": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1278,
        1306
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1750": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1278,
        1306
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1755": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1757": {
      "op": "SHL"
    },
    "1758": {
      "op": "SUB"
    },
    "1759": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1343,
        1357
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 28
    },
    "1760": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1343,
        1357
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1761": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1343,
        1357
      ],
      "op": "AND",
      "path": "0"
    },
    "1762": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1343,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1764": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1343,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1765": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1343,
        1357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1766": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1343,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1767": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1343,
        1352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1769": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1343,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1771": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1343,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1772": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1343,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1774": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1343,
        1357
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1775": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1343,
        1357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1776": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1343,
        1357
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1777": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1343,
        1357
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1778": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1324,
        1340
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1779": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1324,
        1340
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1780": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1324,
        1340
      ],
      "op": "AND",
      "path": "0"
    },
    "1781": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1324,
        1340
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1782": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1324,
        1340
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1783": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1324,
        1340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1784": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1324,
        1340
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1785": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1324,
        1340
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1786": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1361,
        1377
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1787": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1361,
        1377
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1788": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1324,
        1357
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x704"
    },
    "1791": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1324,
        1357
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1792": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1324,
        1357
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x99E"
    },
    "1795": {
      "fn": "TokenERC20._transfer",
      "jump": "i",
      "offset": [
        1324,
        1357
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1796": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1324,
        1357
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1797": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1324,
        1377
      ],
      "op": "EQ",
      "path": "0"
    },
    "1798": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1317,
        1378
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x711"
    },
    "1801": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1317,
        1378
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1802": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1317,
        1378
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x711"
    },
    "1805": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1317,
        1378
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B6"
    },
    "1808": {
      "fn": "TokenERC20._transfer",
      "jump": "i",
      "offset": [
        1317,
        1378
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1809": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1317,
        1378
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1810": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1032,
        1386
      ],
      "op": "POP",
      "path": "0"
    },
    "1811": {
      "fn": "TokenERC20._transfer",
      "offset": [
        960,
        1386
      ],
      "op": "POP",
      "path": "0"
    },
    "1812": {
      "fn": "TokenERC20._transfer",
      "offset": [
        960,
        1386
      ],
      "op": "POP",
      "path": "0"
    },
    "1813": {
      "fn": "TokenERC20._transfer",
      "offset": [
        960,
        1386
      ],
      "op": "POP",
      "path": "0"
    },
    "1814": {
      "fn": "TokenERC20._transfer",
      "jump": "o",
      "offset": [
        960,
        1386
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1815": {
      "op": "JUMPDEST"
    },
    "1816": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1818": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1820": {
      "op": "DUP1"
    },
    "1821": {
      "op": "DUP4"
    },
    "1822": {
      "op": "MSTORE"
    },
    "1823": {
      "op": "DUP4"
    },
    "1824": {
      "op": "MLOAD"
    },
    "1825": {
      "op": "DUP1"
    },
    "1826": {
      "op": "DUP3"
    },
    "1827": {
      "op": "DUP6"
    },
    "1828": {
      "op": "ADD"
    },
    "1829": {
      "op": "MSTORE"
    },
    "1830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1832": {
      "op": "JUMPDEST"
    },
    "1833": {
      "op": "DUP2"
    },
    "1834": {
      "op": "DUP2"
    },
    "1835": {
      "op": "LT"
    },
    "1836": {
      "op": "ISZERO"
    },
    "1837": {
      "op": "PUSH2",
      "value": "0x744"
    },
    "1840": {
      "op": "JUMPI"
    },
    "1841": {
      "op": "DUP6"
    },
    "1842": {
      "op": "DUP2"
    },
    "1843": {
      "op": "ADD"
    },
    "1844": {
      "op": "DUP4"
    },
    "1845": {
      "op": "ADD"
    },
    "1846": {
      "op": "MLOAD"
    },
    "1847": {
      "op": "DUP6"
    },
    "1848": {
      "op": "DUP3"
    },
    "1849": {
      "op": "ADD"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1852": {
      "op": "ADD"
    },
    "1853": {
      "op": "MSTORE"
    },
    "1854": {
      "op": "DUP3"
    },
    "1855": {
      "op": "ADD"
    },
    "1856": {
      "op": "PUSH2",
      "value": "0x728"
    },
    "1859": {
      "op": "JUMP"
    },
    "1860": {
      "op": "JUMPDEST"
    },
    "1861": {
      "op": "DUP2"
    },
    "1862": {
      "op": "DUP2"
    },
    "1863": {
      "op": "GT"
    },
    "1864": {
      "op": "ISZERO"
    },
    "1865": {
      "op": "PUSH2",
      "value": "0x756"
    },
    "1868": {
      "op": "JUMPI"
    },
    "1869": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1873": {
      "op": "DUP4"
    },
    "1874": {
      "op": "DUP8"
    },
    "1875": {
      "op": "ADD"
    },
    "1876": {
      "op": "ADD"
    },
    "1877": {
      "op": "MSTORE"
    },
    "1878": {
      "op": "JUMPDEST"
    },
    "1879": {
      "op": "POP"
    },
    "1880": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1882": {
      "op": "ADD"
    },
    "1883": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1885": {
      "op": "NOT"
    },
    "1886": {
      "op": "AND"
    },
    "1887": {
      "op": "SWAP3"
    },
    "1888": {
      "op": "SWAP1"
    },
    "1889": {
      "op": "SWAP3"
    },
    "1890": {
      "op": "ADD"
    },
    "1891": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1893": {
      "op": "ADD"
    },
    "1894": {
      "op": "SWAP4"
    },
    "1895": {
      "op": "SWAP3"
    },
    "1896": {
      "op": "POP"
    },
    "1897": {
      "op": "POP"
    },
    "1898": {
      "op": "POP"
    },
    "1899": {
      "jump": "o",
      "op": "JUMP"
    },
    "1900": {
      "op": "JUMPDEST"
    },
    "1901": {
      "op": "DUP1"
    },
    "1902": {
      "op": "CALLDATALOAD"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1907": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1909": {
      "op": "SHL"
    },
    "1910": {
      "op": "SUB"
    },
    "1911": {
      "op": "DUP2"
    },
    "1912": {
      "op": "AND"
    },
    "1913": {
      "op": "DUP2"
    },
    "1914": {
      "op": "EQ"
    },
    "1915": {
      "op": "PUSH2",
      "value": "0x783"
    },
    "1918": {
      "op": "JUMPI"
    },
    "1919": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1921": {
      "op": "DUP1"
    },
    "1922": {
      "op": "REVERT"
    },
    "1923": {
      "op": "JUMPDEST"
    },
    "1924": {
      "op": "SWAP2"
    },
    "1925": {
      "op": "SWAP1"
    },
    "1926": {
      "op": "POP"
    },
    "1927": {
      "jump": "o",
      "op": "JUMP"
    },
    "1928": {
      "op": "JUMPDEST"
    },
    "1929": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1931": {
      "op": "DUP1"
    },
    "1932": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1934": {
      "op": "DUP4"
    },
    "1935": {
      "op": "DUP6"
    },
    "1936": {
      "op": "SUB"
    },
    "1937": {
      "op": "SLT"
    },
    "1938": {
      "op": "ISZERO"
    },
    "1939": {
      "op": "PUSH2",
      "value": "0x79B"
    },
    "1942": {
      "op": "JUMPI"
    },
    "1943": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1945": {
      "op": "DUP1"
    },
    "1946": {
      "op": "REVERT"
    },
    "1947": {
      "op": "JUMPDEST"
    },
    "1948": {
      "op": "PUSH2",
      "value": "0x7A4"
    },
    "1951": {
      "op": "DUP4"
    },
    "1952": {
      "op": "PUSH2",
      "value": "0x76C"
    },
    "1955": {
      "jump": "i",
      "op": "JUMP"
    },
    "1956": {
      "op": "JUMPDEST"
    },
    "1957": {
      "op": "SWAP5"
    },
    "1958": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1960": {
      "op": "SWAP4"
    },
    "1961": {
      "op": "SWAP1"
    },
    "1962": {
      "op": "SWAP4"
    },
    "1963": {
      "op": "ADD"
    },
    "1964": {
      "op": "CALLDATALOAD"
    },
    "1965": {
      "op": "SWAP4"
    },
    "1966": {
      "op": "POP"
    },
    "1967": {
      "op": "POP"
    },
    "1968": {
      "op": "POP"
    },
    "1969": {
      "jump": "o",
      "op": "JUMP"
    },
    "1970": {
      "op": "JUMPDEST"
    },
    "1971": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1973": {
      "op": "DUP1"
    },
    "1974": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1976": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1978": {
      "op": "DUP5"
    },
    "1979": {
      "op": "DUP7"
    },
    "1980": {
      "op": "SUB"
    },
    "1981": {
      "op": "SLT"
    },
    "1982": {
      "op": "ISZERO"
    },
    "1983": {
      "op": "PUSH2",
      "value": "0x7C7"
    },
    "1986": {
      "op": "JUMPI"
    },
    "1987": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1989": {
      "op": "DUP1"
    },
    "1990": {
      "op": "REVERT"
    },
    "1991": {
      "op": "JUMPDEST"
    },
    "1992": {
      "op": "PUSH2",
      "value": "0x7D0"
    },
    "1995": {
      "op": "DUP5"
    },
    "1996": {
      "op": "PUSH2",
      "value": "0x76C"
    },
    "1999": {
      "jump": "i",
      "op": "JUMP"
    },
    "2000": {
      "op": "JUMPDEST"
    },
    "2001": {
      "op": "SWAP3"
    },
    "2002": {
      "op": "POP"
    },
    "2003": {
      "op": "PUSH2",
      "value": "0x7DE"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2008": {
      "op": "DUP6"
    },
    "2009": {
      "op": "ADD"
    },
    "2010": {
      "op": "PUSH2",
      "value": "0x76C"
    },
    "2013": {
      "jump": "i",
      "op": "JUMP"
    },
    "2014": {
      "op": "JUMPDEST"
    },
    "2015": {
      "op": "SWAP2"
    },
    "2016": {
      "op": "POP"
    },
    "2017": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2019": {
      "op": "DUP5"
    },
    "2020": {
      "op": "ADD"
    },
    "2021": {
      "op": "CALLDATALOAD"
    },
    "2022": {
      "op": "SWAP1"
    },
    "2023": {
      "op": "POP"
    },
    "2024": {
      "op": "SWAP3"
    },
    "2025": {
      "op": "POP"
    },
    "2026": {
      "op": "SWAP3"
    },
    "2027": {
      "op": "POP"
    },
    "2028": {
      "op": "SWAP3"
    },
    "2029": {
      "jump": "o",
      "op": "JUMP"
    },
    "2030": {
      "op": "JUMPDEST"
    },
    "2031": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2035": {
      "op": "DUP3"
    },
    "2036": {
      "op": "DUP5"
    },
    "2037": {
      "op": "SUB"
    },
    "2038": {
      "op": "SLT"
    },
    "2039": {
      "op": "ISZERO"
    },
    "2040": {
      "op": "PUSH2",
      "value": "0x800"
    },
    "2043": {
      "op": "JUMPI"
    },
    "2044": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2046": {
      "op": "DUP1"
    },
    "2047": {
      "op": "REVERT"
    },
    "2048": {
      "op": "JUMPDEST"
    },
    "2049": {
      "op": "POP"
    },
    "2050": {
      "op": "CALLDATALOAD"
    },
    "2051": {
      "op": "SWAP2"
    },
    "2052": {
      "op": "SWAP1"
    },
    "2053": {
      "op": "POP"
    },
    "2054": {
      "jump": "o",
      "op": "JUMP"
    },
    "2055": {
      "op": "JUMPDEST"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2058": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2060": {
      "op": "DUP3"
    },
    "2061": {
      "op": "DUP5"
    },
    "2062": {
      "op": "SUB"
    },
    "2063": {
      "op": "SLT"
    },
    "2064": {
      "op": "ISZERO"
    },
    "2065": {
      "op": "PUSH2",
      "value": "0x819"
    },
    "2068": {
      "op": "JUMPI"
    },
    "2069": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2071": {
      "op": "DUP1"
    },
    "2072": {
      "op": "REVERT"
    },
    "2073": {
      "op": "JUMPDEST"
    },
    "2074": {
      "op": "PUSH2",
      "value": "0x354"
    },
    "2077": {
      "op": "DUP3"
    },
    "2078": {
      "op": "PUSH2",
      "value": "0x76C"
    },
    "2081": {
      "jump": "i",
      "op": "JUMP"
    },
    "2082": {
      "op": "JUMPDEST"
    },
    "2083": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2090": {
      "op": "SHL"
    },
    "2091": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2093": {
      "op": "MSTORE"
    },
    "2094": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2096": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2098": {
      "op": "MSTORE"
    },
    "2099": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2101": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2103": {
      "op": "REVERT"
    },
    "2104": {
      "op": "JUMPDEST"
    },
    "2105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2107": {
      "op": "DUP1"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2110": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2112": {
      "op": "DUP5"
    },
    "2113": {
      "op": "DUP7"
    },
    "2114": {
      "op": "SUB"
    },
    "2115": {
      "op": "SLT"
    },
    "2116": {
      "op": "ISZERO"
    },
    "2117": {
      "op": "PUSH2",
      "value": "0x84D"
    },
    "2120": {
      "op": "JUMPI"
    },
    "2121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2123": {
      "op": "DUP1"
    },
    "2124": {
      "op": "REVERT"
    },
    "2125": {
      "op": "JUMPDEST"
    },
    "2126": {
      "op": "PUSH2",
      "value": "0x856"
    },
    "2129": {
      "op": "DUP5"
    },
    "2130": {
      "op": "PUSH2",
      "value": "0x76C"
    },
    "2133": {
      "jump": "i",
      "op": "JUMP"
    },
    "2134": {
      "op": "JUMPDEST"
    },
    "2135": {
      "op": "SWAP3"
    },
    "2136": {
      "op": "POP"
    },
    "2137": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2139": {
      "op": "DUP5"
    },
    "2140": {
      "op": "ADD"
    },
    "2141": {
      "op": "CALLDATALOAD"
    },
    "2142": {
      "op": "SWAP2"
    },
    "2143": {
      "op": "POP"
    },
    "2144": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2146": {
      "op": "DUP5"
    },
    "2147": {
      "op": "ADD"
    },
    "2148": {
      "op": "CALLDATALOAD"
    },
    "2149": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2158": {
      "op": "DUP1"
    },
    "2159": {
      "op": "DUP3"
    },
    "2160": {
      "op": "GT"
    },
    "2161": {
      "op": "ISZERO"
    },
    "2162": {
      "op": "PUSH2",
      "value": "0x87A"
    },
    "2165": {
      "op": "JUMPI"
    },
    "2166": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2168": {
      "op": "DUP1"
    },
    "2169": {
      "op": "REVERT"
    },
    "2170": {
      "op": "JUMPDEST"
    },
    "2171": {
      "op": "DUP2"
    },
    "2172": {
      "op": "DUP7"
    },
    "2173": {
      "op": "ADD"
    },
    "2174": {
      "op": "SWAP2"
    },
    "2175": {
      "op": "POP"
    },
    "2176": {
      "op": "DUP7"
    },
    "2177": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2179": {
      "op": "DUP4"
    },
    "2180": {
      "op": "ADD"
    },
    "2181": {
      "op": "SLT"
    },
    "2182": {
      "op": "PUSH2",
      "value": "0x88E"
    },
    "2185": {
      "op": "JUMPI"
    },
    "2186": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2188": {
      "op": "DUP1"
    },
    "2189": {
      "op": "REVERT"
    },
    "2190": {
      "op": "JUMPDEST"
    },
    "2191": {
      "op": "DUP2"
    },
    "2192": {
      "op": "CALLDATALOAD"
    },
    "2193": {
      "op": "DUP2"
    },
    "2194": {
      "op": "DUP2"
    },
    "2195": {
      "op": "GT"
    },
    "2196": {
      "op": "ISZERO"
    },
    "2197": {
      "op": "PUSH2",
      "value": "0x8A0"
    },
    "2200": {
      "op": "JUMPI"
    },
    "2201": {
      "op": "PUSH2",
      "value": "0x8A0"
    },
    "2204": {
      "op": "PUSH2",
      "value": "0x822"
    },
    "2207": {
      "jump": "i",
      "op": "JUMP"
    },
    "2208": {
      "op": "JUMPDEST"
    },
    "2209": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2211": {
      "op": "MLOAD"
    },
    "2212": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2214": {
      "op": "DUP3"
    },
    "2215": {
      "op": "ADD"
    },
    "2216": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2218": {
      "op": "NOT"
    },
    "2219": {
      "op": "SWAP1"
    },
    "2220": {
      "op": "DUP2"
    },
    "2221": {
      "op": "AND"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "2224": {
      "op": "ADD"
    },
    "2225": {
      "op": "AND"
    },
    "2226": {
      "op": "DUP2"
    },
    "2227": {
      "op": "ADD"
    },
    "2228": {
      "op": "SWAP1"
    },
    "2229": {
      "op": "DUP4"
    },
    "2230": {
      "op": "DUP3"
    },
    "2231": {
      "op": "GT"
    },
    "2232": {
      "op": "DUP2"
    },
    "2233": {
      "op": "DUP4"
    },
    "2234": {
      "op": "LT"
    },
    "2235": {
      "op": "OR"
    },
    "2236": {
      "op": "ISZERO"
    },
    "2237": {
      "op": "PUSH2",
      "value": "0x8C8"
    },
    "2240": {
      "op": "JUMPI"
    },
    "2241": {
      "op": "PUSH2",
      "value": "0x8C8"
    },
    "2244": {
      "op": "PUSH2",
      "value": "0x822"
    },
    "2247": {
      "jump": "i",
      "op": "JUMP"
    },
    "2248": {
      "op": "JUMPDEST"
    },
    "2249": {
      "op": "DUP2"
    },
    "2250": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2252": {
      "op": "MSTORE"
    },
    "2253": {
      "op": "DUP3"
    },
    "2254": {
      "op": "DUP2"
    },
    "2255": {
      "op": "MSTORE"
    },
    "2256": {
      "op": "DUP10"
    },
    "2257": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2259": {
      "op": "DUP5"
    },
    "2260": {
      "op": "DUP8"
    },
    "2261": {
      "op": "ADD"
    },
    "2262": {
      "op": "ADD"
    },
    "2263": {
      "op": "GT"
    },
    "2264": {
      "op": "ISZERO"
    },
    "2265": {
      "op": "PUSH2",
      "value": "0x8E1"
    },
    "2268": {
      "op": "JUMPI"
    },
    "2269": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2271": {
      "op": "DUP1"
    },
    "2272": {
      "op": "REVERT"
    },
    "2273": {
      "op": "JUMPDEST"
    },
    "2274": {
      "op": "DUP3"
    },
    "2275": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2277": {
      "op": "DUP7"
    },
    "2278": {
      "op": "ADD"
    },
    "2279": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2281": {
      "op": "DUP4"
    },
    "2282": {
      "op": "ADD"
    },
    "2283": {
      "op": "CALLDATACOPY"
    },
    "2284": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2288": {
      "op": "DUP5"
    },
    "2289": {
      "op": "DUP4"
    },
    "2290": {
      "op": "ADD"
    },
    "2291": {
      "op": "ADD"
    },
    "2292": {
      "op": "MSTORE"
    },
    "2293": {
      "op": "DUP1"
    },
    "2294": {
      "op": "SWAP6"
    },
    "2295": {
      "op": "POP"
    },
    "2296": {
      "op": "POP"
    },
    "2297": {
      "op": "POP"
    },
    "2298": {
      "op": "POP"
    },
    "2299": {
      "op": "POP"
    },
    "2300": {
      "op": "POP"
    },
    "2301": {
      "op": "SWAP3"
    },
    "2302": {
      "op": "POP"
    },
    "2303": {
      "op": "SWAP3"
    },
    "2304": {
      "op": "POP"
    },
    "2305": {
      "op": "SWAP3"
    },
    "2306": {
      "jump": "o",
      "op": "JUMP"
    },
    "2307": {
      "op": "JUMPDEST"
    },
    "2308": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2310": {
      "op": "DUP1"
    },
    "2311": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2313": {
      "op": "DUP4"
    },
    "2314": {
      "op": "DUP6"
    },
    "2315": {
      "op": "SUB"
    },
    "2316": {
      "op": "SLT"
    },
    "2317": {
      "op": "ISZERO"
    },
    "2318": {
      "op": "PUSH2",
      "value": "0x916"
    },
    "2321": {
      "op": "JUMPI"
    },
    "2322": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2324": {
      "op": "DUP1"
    },
    "2325": {
      "op": "REVERT"
    },
    "2326": {
      "op": "JUMPDEST"
    },
    "2327": {
      "op": "PUSH2",
      "value": "0x91F"
    },
    "2330": {
      "op": "DUP4"
    },
    "2331": {
      "op": "PUSH2",
      "value": "0x76C"
    },
    "2334": {
      "jump": "i",
      "op": "JUMP"
    },
    "2335": {
      "op": "JUMPDEST"
    },
    "2336": {
      "op": "SWAP2"
    },
    "2337": {
      "op": "POP"
    },
    "2338": {
      "op": "PUSH2",
      "value": "0x92D"
    },
    "2341": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2343": {
      "op": "DUP5"
    },
    "2344": {
      "op": "ADD"
    },
    "2345": {
      "op": "PUSH2",
      "value": "0x76C"
    },
    "2348": {
      "jump": "i",
      "op": "JUMP"
    },
    "2349": {
      "op": "JUMPDEST"
    },
    "2350": {
      "op": "SWAP1"
    },
    "2351": {
      "op": "POP"
    },
    "2352": {
      "op": "SWAP3"
    },
    "2353": {
      "op": "POP"
    },
    "2354": {
      "op": "SWAP3"
    },
    "2355": {
      "op": "SWAP1"
    },
    "2356": {
      "op": "POP"
    },
    "2357": {
      "jump": "o",
      "op": "JUMP"
    },
    "2358": {
      "op": "JUMPDEST"
    },
    "2359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2361": {
      "op": "DUP2"
    },
    "2362": {
      "op": "DUP2"
    },
    "2363": {
      "op": "SHR"
    },
    "2364": {
      "op": "SWAP1"
    },
    "2365": {
      "op": "DUP3"
    },
    "2366": {
      "op": "AND"
    },
    "2367": {
      "op": "DUP1"
    },
    "2368": {
      "op": "PUSH2",
      "value": "0x94A"
    },
    "2371": {
      "op": "JUMPI"
    },
    "2372": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2374": {
      "op": "DUP3"
    },
    "2375": {
      "op": "AND"
    },
    "2376": {
      "op": "SWAP2"
    },
    "2377": {
      "op": "POP"
    },
    "2378": {
      "op": "JUMPDEST"
    },
    "2379": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2381": {
      "op": "DUP3"
    },
    "2382": {
      "op": "LT"
    },
    "2383": {
      "op": "DUP2"
    },
    "2384": {
      "op": "EQ"
    },
    "2385": {
      "op": "ISZERO"
    },
    "2386": {
      "op": "PUSH2",
      "value": "0x96B"
    },
    "2389": {
      "op": "JUMPI"
    },
    "2390": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2395": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2397": {
      "op": "SHL"
    },
    "2398": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2400": {
      "op": "MSTORE"
    },
    "2401": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2403": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2405": {
      "op": "MSTORE"
    },
    "2406": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2410": {
      "op": "REVERT"
    },
    "2411": {
      "op": "JUMPDEST"
    },
    "2412": {
      "op": "POP"
    },
    "2413": {
      "op": "SWAP2"
    },
    "2414": {
      "op": "SWAP1"
    },
    "2415": {
      "op": "POP"
    },
    "2416": {
      "jump": "o",
      "op": "JUMP"
    },
    "2417": {
      "op": "JUMPDEST"
    },
    "2418": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2423": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2425": {
      "op": "SHL"
    },
    "2426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2428": {
      "op": "MSTORE"
    },
    "2429": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2431": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2433": {
      "op": "MSTORE"
    },
    "2434": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2438": {
      "op": "REVERT"
    },
    "2439": {
      "op": "JUMPDEST"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2442": {
      "op": "DUP3"
    },
    "2443": {
      "op": "DUP3"
    },
    "2444": {
      "op": "LT"
    },
    "2445": {
      "op": "ISZERO"
    },
    "2446": {
      "op": "PUSH2",
      "value": "0x999"
    },
    "2449": {
      "op": "JUMPI"
    },
    "2450": {
      "op": "PUSH2",
      "value": "0x999"
    },
    "2453": {
      "op": "PUSH2",
      "value": "0x971"
    },
    "2456": {
      "jump": "i",
      "op": "JUMP"
    },
    "2457": {
      "op": "JUMPDEST"
    },
    "2458": {
      "op": "POP"
    },
    "2459": {
      "op": "SUB"
    },
    "2460": {
      "op": "SWAP1"
    },
    "2461": {
      "jump": "o",
      "op": "JUMP"
    },
    "2462": {
      "op": "JUMPDEST"
    },
    "2463": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2465": {
      "op": "DUP3"
    },
    "2466": {
      "op": "NOT"
    },
    "2467": {
      "op": "DUP3"
    },
    "2468": {
      "op": "GT"
    },
    "2469": {
      "op": "ISZERO"
    },
    "2470": {
      "op": "PUSH2",
      "value": "0x9B1"
    },
    "2473": {
      "op": "JUMPI"
    },
    "2474": {
      "op": "PUSH2",
      "value": "0x9B1"
    },
    "2477": {
      "op": "PUSH2",
      "value": "0x971"
    },
    "2480": {
      "jump": "i",
      "op": "JUMP"
    },
    "2481": {
      "op": "JUMPDEST"
    },
    "2482": {
      "op": "POP"
    },
    "2483": {
      "op": "ADD"
    },
    "2484": {
      "op": "SWAP1"
    },
    "2485": {
      "jump": "o",
      "op": "JUMP"
    },
    "2486": {
      "op": "JUMPDEST"
    },
    "2487": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2492": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2494": {
      "op": "SHL"
    },
    "2495": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2497": {
      "op": "MSTORE"
    },
    "2498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2500": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2502": {
      "op": "MSTORE"
    },
    "2503": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2505": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2507": {
      "op": "REVERT"
    }
  },
  "sha1": "a1b0f02553ad66ea3c875e576333446014edd6f1",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.7;\n\ninterface tokenRecipient {\n    function recieveApproval(address _from, uint256 _value, address _taken) external;\n}\n\ncontract TokenERC20 {\n    string public name;\n    string public symbol;\n    uint8 public decimals = 18;\n    uint256 public totalSupply;\n\n    mapping(address => uint256) public balanceOf;\n    mapping(address => mapping(address => uint256)) public allowance;\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed _owner, address indexed _spender, uint _value);\n\n    event Burn(address indexed from, uint256 value);\n\n    constructor(uint256 initialSupply, \n        string memory tokenName, \n        string memory tokenSymbol\n        ) public {\n            totalSupply = initialSupply*10**uint256(decimals);\n            balanceOf[msg.sender]=totalSupply;\n            name=tokenName;\n            symbol=tokenSymbol;\n        }\n\n     function _transfer(address _from, address _to, uint256 _value) internal {\n         require(_to!=address(0x0));\n         require(balanceOf[_from]>=_value);\n         \n         uint previousBalances = balanceOf[_from] += balanceOf[_to];\n         balanceOf[_from]-=_value;\n         balanceOf[_from]+=_value;\n         emit Transfer(_from, _to, _value);\n         assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\n     }\n    function transfer(address _to, uint256 _value) public returns(bool success) {\n        _transfer(msg.sender, _to, _value);\n        return true;\n    }\n    function transferFrom(address _from, address _to, uint256 _value) public returns(bool success) {\n        require(_value <= allowance[_from][msg.sender]);\n        allowance[_from][msg.sender] -= _value;\n        _transfer(_from, _to, _value);\n        return true;\n    }\n\n    function approve(address _spender, uint256 _value) public returns(bool success) {\n        allowance[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n    function approveAndCall(address _spender, uint256 _value, bytes memory _extraData) \n    public returns(bool success) {\n        tokenRecipient spender = tokenRecipient(_spender);\n        if(approve(_spender, _value)) {\n            spender.recieveApproval(msg.sender, _value, address(this));\n            return true;    \n        }\n    }\n    function burn(uint256 _value) public returns (bool success) {\n         require(balanceOf[msg.sender]>= _value);\n            balanceOf[msg.sender] -= _value;\n            totalSupply -= _value;\n            emit Burn(msg.sender, _value);\n            return true;\n    }\n\n    function burnFrom(address _from, uint256 _value) public returns(bool success) {\n        require(balanceOf[_from] >= _value);\n        require(_value<= allowance[_from][msg.sender]);\n        balanceOf[_from] -= _value;\n        allowance[_from][msg.sender] -= _value;\n        totalSupply -= _value;\n        emit Burn(_from, _value);\n        return true;\n\n    }\n\n}",
  "sourceMap": "174:2829:0:-:0;;;250:26;;;-1:-1:-1;;250:26:0;274:2;250:26;;;651:302;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;826:8;;814:21;;826:8;;814:2;:21;:::i;:::-;800:35;;:13;:35;:::i;:::-;786:11;:49;;;859:10;849:21;;;;:9;:21;;;;;;;:33;;;;896:14;;;;;;;;:::i;:::-;-1:-1:-1;924:18:0;;;;:6;;:18;;;;;:::i;:::-;;651:302;;;174:2829;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;174:2829:0;;;-1:-1:-1;174:2829:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:1;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:1;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:1;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:1:o;1036:623::-;1144:6;1152;1160;1213:2;1201:9;1192:7;1188:23;1184:32;1181:52;;;1229:1;1226;1219:12;1181:52;1252:16;;1312:2;1297:18;;1291:25;1252:16;;-1:-1:-1;;;;;;1365:14:1;;;1362:34;;;1392:1;1389;1382:12;1362:34;1415:61;1468:7;1459:6;1448:9;1444:22;1415:61;:::i;:::-;1405:71;;1522:2;1511:9;1507:18;1501:25;1485:41;;1551:2;1541:8;1538:16;1535:36;;;1567:1;1564;1557:12;1535:36;;1590:63;1645:7;1634:8;1623:9;1619:24;1590:63;:::i;:::-;1580:73;;;1036:623;;;;;:::o;1664:127::-;1725:10;1720:3;1716:20;1713:1;1706:31;1756:4;1753:1;1746:15;1780:4;1777:1;1770:15;1796:422;1885:1;1928:5;1885:1;1942:270;1963:7;1953:8;1950:21;1942:270;;;2022:4;2018:1;2014:6;2010:17;2004:4;2001:27;1998:53;;;2031:18;;:::i;:::-;2081:7;2071:8;2067:22;2064:55;;;2101:16;;;;2064:55;2180:22;;;;2140:15;;;;1942:270;;;1946:3;1796:422;;;;;:::o;2223:806::-;2272:5;2302:8;2292:80;;-1:-1:-1;2343:1:1;2357:5;;2292:80;2391:4;2381:76;;-1:-1:-1;2428:1:1;2442:5;;2381:76;2473:4;2491:1;2486:59;;;;2559:1;2554:130;;;;2466:218;;2486:59;2516:1;2507:10;;2530:5;;;2554:130;2591:3;2581:8;2578:17;2575:43;;;2598:18;;:::i;:::-;-1:-1:-1;;2654:1:1;2640:16;;2669:5;;2466:218;;2768:2;2758:8;2755:16;2749:3;2743:4;2740:13;2736:36;2730:2;2720:8;2717:16;2712:2;2706:4;2703:12;2699:35;2696:77;2693:159;;;-1:-1:-1;2805:19:1;;;2837:5;;2693:159;2884:34;2909:8;2903:4;2884:34;:::i;:::-;2954:6;2950:1;2946:6;2942:19;2933:7;2930:32;2927:58;;;2965:18;;:::i;:::-;3003:20;;-1:-1:-1;2223:806:1;;;;;:::o;3034:131::-;3094:5;3123:36;3150:8;3144:4;3123:36;:::i;:::-;3114:45;3034:131;-1:-1:-1;;;3034:131:1:o;3170:168::-;3210:7;3276:1;3272;3268:6;3264:14;3261:1;3258:21;3253:1;3246:9;3239:17;3235:45;3232:71;;;3283:18;;:::i;:::-;-1:-1:-1;3323:9:1;;3170:168::o;3343:380::-;3422:1;3418:12;;;;3465;;;3486:61;;3540:4;3532:6;3528:17;3518:27;;3486:61;3593:2;3585:6;3582:14;3562:18;3559:38;3556:161;;;3639:10;3634:3;3630:20;3627:1;3620:31;3674:4;3671:1;3664:15;3702:4;3699:1;3692:15;3556:161;;3343:380;;;:::o;:::-;174:2829:0;;;;;;",
  "sourcePath": "contracts/ERC20Tokens.sol",
  "type": "contract"
}